
robot3_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010c  00800100  000015fc  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000100  0080020c  0080020c  0000179c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00001808  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011b4  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b6  00000000  00000000  00002a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a49  00000000  00000000  00003432  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b8  00000000  00000000  00003e7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c6  00000000  00000000  00004134  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b12  00000000  00000000  000048fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000540c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	87 c0       	rjmp	.+270    	; 0x110 <__ctors_end>
       2:	00 00       	nop
       4:	ae c0       	rjmp	.+348    	; 0x162 <__bad_interrupt>
       6:	00 00       	nop
       8:	ac c0       	rjmp	.+344    	; 0x162 <__bad_interrupt>
       a:	00 00       	nop
       c:	aa c0       	rjmp	.+340    	; 0x162 <__bad_interrupt>
       e:	00 00       	nop
      10:	a8 c0       	rjmp	.+336    	; 0x162 <__bad_interrupt>
      12:	00 00       	nop
      14:	a6 c0       	rjmp	.+332    	; 0x162 <__bad_interrupt>
      16:	00 00       	nop
      18:	a4 c0       	rjmp	.+328    	; 0x162 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a2 c0       	rjmp	.+324    	; 0x162 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a0 c0       	rjmp	.+320    	; 0x162 <__bad_interrupt>
      22:	00 00       	nop
      24:	9e c0       	rjmp	.+316    	; 0x162 <__bad_interrupt>
      26:	00 00       	nop
      28:	f1 c4       	rjmp	.+2530   	; 0xa0c <__vector_10>
      2a:	00 00       	nop
      2c:	9a c0       	rjmp	.+308    	; 0x162 <__bad_interrupt>
      2e:	00 00       	nop
      30:	98 c0       	rjmp	.+304    	; 0x162 <__bad_interrupt>
      32:	00 00       	nop
      34:	96 c0       	rjmp	.+300    	; 0x162 <__bad_interrupt>
      36:	00 00       	nop
      38:	94 c0       	rjmp	.+296    	; 0x162 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	92 c0       	rjmp	.+292    	; 0x162 <__bad_interrupt>
      3e:	00 00       	nop
      40:	90 c0       	rjmp	.+288    	; 0x162 <__bad_interrupt>
      42:	00 00       	nop
      44:	8e c0       	rjmp	.+284    	; 0x162 <__bad_interrupt>
      46:	00 00       	nop
      48:	8c c0       	rjmp	.+280    	; 0x162 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8a c0       	rjmp	.+276    	; 0x162 <__bad_interrupt>
      4e:	00 00       	nop
      50:	88 c0       	rjmp	.+272    	; 0x162 <__bad_interrupt>
      52:	00 00       	nop
      54:	86 c0       	rjmp	.+268    	; 0x162 <__bad_interrupt>
      56:	00 00       	nop
      58:	84 c0       	rjmp	.+264    	; 0x162 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	82 c0       	rjmp	.+260    	; 0x162 <__bad_interrupt>
      5e:	00 00       	nop
      60:	80 c0       	rjmp	.+256    	; 0x162 <__bad_interrupt>
      62:	00 00       	nop
      64:	7e c0       	rjmp	.+252    	; 0x162 <__bad_interrupt>
      66:	00 00       	nop
      68:	7c c0       	rjmp	.+248    	; 0x162 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7a c0       	rjmp	.+244    	; 0x162 <__bad_interrupt>
      6e:	00 00       	nop
      70:	78 c0       	rjmp	.+240    	; 0x162 <__bad_interrupt>
      72:	00 00       	nop
      74:	76 c0       	rjmp	.+236    	; 0x162 <__bad_interrupt>
      76:	00 00       	nop
      78:	74 c0       	rjmp	.+232    	; 0x162 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	72 c0       	rjmp	.+228    	; 0x162 <__bad_interrupt>
      7e:	00 00       	nop
      80:	70 c0       	rjmp	.+224    	; 0x162 <__bad_interrupt>
      82:	00 00       	nop
      84:	6e c0       	rjmp	.+220    	; 0x162 <__bad_interrupt>
      86:	00 00       	nop
      88:	6c c0       	rjmp	.+216    	; 0x162 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 00       	.word	0x0008	; ????
      8e:	00 00       	nop
      90:	be 92       	st	-X, r11
      92:	24 49       	sbci	r18, 0x94	; 148
      94:	12 3e       	cpi	r17, 0xE2	; 226
      96:	ab aa       	std	Y+51, r10	; 0x33
      98:	aa 2a       	or	r10, r26
      9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
      9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
      9e:	4c 3e       	cpi	r20, 0xEC	; 236
      a0:	00 00       	nop
      a2:	00 80       	ld	r0, Z
      a4:	be ab       	std	Y+54, r27	; 0x36
      a6:	aa aa       	std	Y+50, r10	; 0x32
      a8:	aa 3e       	cpi	r26, 0xEA	; 234
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	00 08       	sbc	r0, r0
      ba:	41 78       	andi	r20, 0x81	; 129
      bc:	d3 bb       	out	0x13, r29	; 19
      be:	43 87       	std	Z+11, r20	; 0x0b
      c0:	d1 13       	cpse	r29, r17
      c2:	3d 19       	sub	r19, r13
      c4:	0e 3c       	cpi	r16, 0xCE	; 206
      c6:	c3 bd       	out	0x23, r28	; 35
      c8:	42 82       	std	Z+2, r4	; 0x02
      ca:	ad 2b       	or	r26, r29
      cc:	3e 68       	ori	r19, 0x8E	; 142
      ce:	ec 82       	std	Y+4, r14	; 0x04
      d0:	76 be       	out	0x36, r7	; 54
      d2:	d9 8f       	std	Y+25, r29	; 0x19
      d4:	e1 a9       	ldd	r30, Z+49	; 0x31
      d6:	3e 4c       	sbci	r19, 0xCE	; 206
      d8:	80 ef       	ldi	r24, 0xF0	; 240
      da:	ff be       	out	0x3f, r15	; 63
      dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <_Z7get_cdsv+0x6e>
      de:	ff 7f       	andi	r31, 0xFF	; 255
      e0:	3f 00       	.word	0x003f	; ????
      e2:	00 00       	nop
      e4:	00 00       	nop
      e6:	07 63       	ori	r16, 0x37	; 55
      e8:	42 36       	cpi	r20, 0x62	; 98
      ea:	b7 9b       	sbis	0x16, 7	; 22
      ec:	d8 a7       	std	Y+40, r29	; 0x28
      ee:	1a 39       	cpi	r17, 0x9A	; 154
      f0:	68 56       	subi	r22, 0x68	; 104
      f2:	18 ae       	std	Y+56, r1	; 0x38
      f4:	ba ab       	std	Y+50, r27	; 0x32
      f6:	55 8c       	ldd	r5, Z+29	; 0x1d
      f8:	1d 3c       	cpi	r17, 0xCD	; 205
      fa:	b7 cc       	rjmp	.-1682   	; 0xfffffa6a <__eeprom_end+0xff7efa6a>
      fc:	57 63       	ori	r21, 0x37	; 55
      fe:	bd 6d       	ori	r27, 0xDD	; 221
     100:	ed fd       	.word	0xfded	; ????
     102:	75 3e       	cpi	r23, 0xE5	; 229
     104:	f6 17       	cp	r31, r22
     106:	72 31       	cpi	r23, 0x12	; 18
     108:	bf 00       	.word	0x00bf	; ????
     10a:	00 00       	nop
     10c:	80 3f       	cpi	r24, 0xF0	; 240

0000010e <__ctors_start>:
     10e:	93 07       	cpc	r25, r19

00000110 <__ctors_end>:
     110:	11 24       	eor	r1, r1
     112:	1f be       	out	0x3f, r1	; 63
     114:	cf ef       	ldi	r28, 0xFF	; 255
     116:	d0 e1       	ldi	r29, 0x10	; 16
     118:	de bf       	out	0x3e, r29	; 62
     11a:	cd bf       	out	0x3d, r28	; 61

0000011c <__do_copy_data>:
     11c:	12 e0       	ldi	r17, 0x02	; 2
     11e:	a0 e0       	ldi	r26, 0x00	; 0
     120:	b1 e0       	ldi	r27, 0x01	; 1
     122:	ec ef       	ldi	r30, 0xFC	; 252
     124:	f5 e1       	ldi	r31, 0x15	; 21
     126:	00 e0       	ldi	r16, 0x00	; 0
     128:	0b bf       	out	0x3b, r16	; 59
     12a:	02 c0       	rjmp	.+4      	; 0x130 <__do_copy_data+0x14>
     12c:	07 90       	elpm	r0, Z+
     12e:	0d 92       	st	X+, r0
     130:	ac 30       	cpi	r26, 0x0C	; 12
     132:	b1 07       	cpc	r27, r17
     134:	d9 f7       	brne	.-10     	; 0x12c <__do_copy_data+0x10>

00000136 <__do_clear_bss>:
     136:	23 e0       	ldi	r18, 0x03	; 3
     138:	ac e0       	ldi	r26, 0x0C	; 12
     13a:	b2 e0       	ldi	r27, 0x02	; 2
     13c:	01 c0       	rjmp	.+2      	; 0x140 <.do_clear_bss_start>

0000013e <.do_clear_bss_loop>:
     13e:	1d 92       	st	X+, r1

00000140 <.do_clear_bss_start>:
     140:	ac 30       	cpi	r26, 0x0C	; 12
     142:	b2 07       	cpc	r27, r18
     144:	e1 f7       	brne	.-8      	; 0x13e <.do_clear_bss_loop>

00000146 <__do_global_ctors>:
     146:	10 e0       	ldi	r17, 0x00	; 0
     148:	c8 e8       	ldi	r28, 0x88	; 136
     14a:	d0 e0       	ldi	r29, 0x00	; 0
     14c:	04 c0       	rjmp	.+8      	; 0x156 <__do_global_ctors+0x10>
     14e:	21 97       	sbiw	r28, 0x01	; 1
     150:	fe 01       	movw	r30, r28
     152:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <__tablejump2__>
     156:	c7 38       	cpi	r28, 0x87	; 135
     158:	d1 07       	cpc	r29, r17
     15a:	c9 f7       	brne	.-14     	; 0x14e <__do_global_ctors+0x8>
     15c:	b7 d4       	rcall	.+2414   	; 0xacc <main>
     15e:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <_exit>

00000162 <__bad_interrupt>:
     162:	4e cf       	rjmp	.-356    	; 0x0 <__vectors>

00000164 <_Z41__static_initialization_and_destruction_0ii>:
	USART0_TX(nNum / 10000 + 48);				//10000의 자리
	USART0_TX((nNum % 10000) / 1000 + 48);		//1000의 자리
	USART0_TX((nNum % 1000) / 100 + 48);		//100의 자리
	USART0_TX((nNum % 100) / 10 + 48);			//10의 자리
	USART0_TX((nNum % 10) + 48);				//1의 자리
}
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	19 f5       	brne	.+70     	; 0x1ae <_Z41__static_initialization_and_destruction_0ii+0x4a>
     168:	6f 3f       	cpi	r22, 0xFF	; 255
     16a:	7f 4f       	sbci	r23, 0xFF	; 255
     16c:	01 f5       	brne	.+64     	; 0x1ae <_Z41__static_initialization_and_destruction_0ii+0x4a>
     16e:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <LPF_fc>
     172:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <LPF_fc+0x1>
     176:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <LPF_fc+0x2>
     17a:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <LPF_fc+0x3>
     17e:	9b 01       	movw	r18, r22
     180:	ac 01       	movw	r20, r24
     182:	d8 d6       	rcall	.+3504   	; 0xf34 <__addsf3>
     184:	2b ed       	ldi	r18, 0xDB	; 219
     186:	3f e0       	ldi	r19, 0x0F	; 15
     188:	49 e4       	ldi	r20, 0x49	; 73
     18a:	50 e4       	ldi	r21, 0x40	; 64
     18c:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__mulsf3>
     190:	9b 01       	movw	r18, r22
     192:	ac 01       	movw	r20, r24
     194:	60 e0       	ldi	r22, 0x00	; 0
     196:	70 e0       	ldi	r23, 0x00	; 0
     198:	80 e8       	ldi	r24, 0x80	; 128
     19a:	9f e3       	ldi	r25, 0x3F	; 63
     19c:	2f d7       	rcall	.+3678   	; 0xffc <__divsf3>
     19e:	60 93 f6 02 	sts	0x02F6, r22	; 0x8002f6 <LPF_tau>
     1a2:	70 93 f7 02 	sts	0x02F7, r23	; 0x8002f7 <LPF_tau+0x1>
     1a6:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <LPF_tau+0x2>
     1aa:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <LPF_tau+0x3>
     1ae:	08 95       	ret

000001b0 <_Z15Low_Pass_Filterd>:
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	9b 01       	movw	r18, r22
     1ba:	ac 01       	movw	r20, r24
     1bc:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dt>
     1c0:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dt+0x1>
     1c4:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dt+0x2>
     1c8:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dt+0x3>
     1cc:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__mulsf3>
     1d0:	6b 01       	movw	r12, r22
     1d2:	7c 01       	movw	r14, r24
     1d4:	60 91 f6 02 	lds	r22, 0x02F6	; 0x8002f6 <LPF_tau>
     1d8:	70 91 f7 02 	lds	r23, 0x02F7	; 0x8002f7 <LPF_tau+0x1>
     1dc:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <LPF_tau+0x2>
     1e0:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <LPF_tau+0x3>
     1e4:	20 91 ee 02 	lds	r18, 0x02EE	; 0x8002ee <LPF_past>
     1e8:	30 91 ef 02 	lds	r19, 0x02EF	; 0x8002ef <LPF_past+0x1>
     1ec:	40 91 f0 02 	lds	r20, 0x02F0	; 0x8002f0 <LPF_past+0x2>
     1f0:	50 91 f1 02 	lds	r21, 0x02F1	; 0x8002f1 <LPF_past+0x3>
     1f4:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__mulsf3>
     1f8:	9b 01       	movw	r18, r22
     1fa:	ac 01       	movw	r20, r24
     1fc:	c7 01       	movw	r24, r14
     1fe:	b6 01       	movw	r22, r12
     200:	99 d6       	rcall	.+3378   	; 0xf34 <__addsf3>
     202:	6b 01       	movw	r12, r22
     204:	7c 01       	movw	r14, r24
     206:	60 91 f6 02 	lds	r22, 0x02F6	; 0x8002f6 <LPF_tau>
     20a:	70 91 f7 02 	lds	r23, 0x02F7	; 0x8002f7 <LPF_tau+0x1>
     20e:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <LPF_tau+0x2>
     212:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <LPF_tau+0x3>
     216:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <dt>
     21a:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <dt+0x1>
     21e:	40 91 06 02 	lds	r20, 0x0206	; 0x800206 <dt+0x2>
     222:	50 91 07 02 	lds	r21, 0x0207	; 0x800207 <dt+0x3>
     226:	86 d6       	rcall	.+3340   	; 0xf34 <__addsf3>
     228:	9b 01       	movw	r18, r22
     22a:	ac 01       	movw	r20, r24
     22c:	c7 01       	movw	r24, r14
     22e:	b6 01       	movw	r22, r12
     230:	e5 d6       	rcall	.+3530   	; 0xffc <__divsf3>
     232:	60 93 f2 02 	sts	0x02F2, r22	; 0x8002f2 <LPF>
     236:	70 93 f3 02 	sts	0x02F3, r23	; 0x8002f3 <LPF+0x1>
     23a:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <LPF+0x2>
     23e:	90 93 f5 02 	sts	0x02F5, r25	; 0x8002f5 <LPF+0x3>
     242:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <LPF>
     246:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <LPF+0x1>
     24a:	a0 91 f4 02 	lds	r26, 0x02F4	; 0x8002f4 <LPF+0x2>
     24e:	b0 91 f5 02 	lds	r27, 0x02F5	; 0x8002f5 <LPF+0x3>
     252:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <LPF_past>
     256:	90 93 ef 02 	sts	0x02EF, r25	; 0x8002ef <LPF_past+0x1>
     25a:	a0 93 f0 02 	sts	0x02F0, r26	; 0x8002f0 <LPF_past+0x2>
     25e:	b0 93 f1 02 	sts	0x02F1, r27	; 0x8002f1 <LPF_past+0x3>
     262:	60 91 f2 02 	lds	r22, 0x02F2	; 0x8002f2 <LPF>
     266:	70 91 f3 02 	lds	r23, 0x02F3	; 0x8002f3 <LPF+0x1>
     26a:	80 91 f4 02 	lds	r24, 0x02F4	; 0x8002f4 <LPF+0x2>
     26e:	90 91 f5 02 	lds	r25, 0x02F5	; 0x8002f5 <LPF+0x3>
     272:	ff 90       	pop	r15
     274:	ef 90       	pop	r14
     276:	df 90       	pop	r13
     278:	cf 90       	pop	r12
     27a:	08 95       	ret

0000027c <_Z32Moving_Average_Filter_thermisterd>:
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	10 92 c0 02 	sts	0x02C0, r1	; 0x8002c0 <MAF_t>
     284:	10 92 c1 02 	sts	0x02C1, r1	; 0x8002c1 <MAF_t+0x1>
     288:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <MAF_t+0x2>
     28c:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <MAF_t+0x3>
     290:	e0 91 c4 02 	lds	r30, 0x02C4	; 0x8002c4 <m_t>
     294:	f0 91 c5 02 	lds	r31, 0x02C5	; 0x8002c5 <m_t+0x1>
     298:	ee 0f       	add	r30, r30
     29a:	ff 1f       	adc	r31, r31
     29c:	ee 0f       	add	r30, r30
     29e:	ff 1f       	adc	r31, r31
     2a0:	ea 53       	subi	r30, 0x3A	; 58
     2a2:	fd 4f       	sbci	r31, 0xFD	; 253
     2a4:	60 83       	st	Z, r22
     2a6:	71 83       	std	Z+1, r23	; 0x01
     2a8:	82 83       	std	Z+2, r24	; 0x02
     2aa:	93 83       	std	Z+3, r25	; 0x03
     2ac:	c0 e0       	ldi	r28, 0x00	; 0
     2ae:	d0 e0       	ldi	r29, 0x00	; 0
     2b0:	ca 30       	cpi	r28, 0x0A	; 10
     2b2:	d1 05       	cpc	r29, r1
     2b4:	f4 f4       	brge	.+60     	; 0x2f2 <_Z32Moving_Average_Filter_thermisterd+0x76>
     2b6:	fe 01       	movw	r30, r28
     2b8:	ee 0f       	add	r30, r30
     2ba:	ff 1f       	adc	r31, r31
     2bc:	ee 0f       	add	r30, r30
     2be:	ff 1f       	adc	r31, r31
     2c0:	ea 53       	subi	r30, 0x3A	; 58
     2c2:	fd 4f       	sbci	r31, 0xFD	; 253
     2c4:	60 81       	ld	r22, Z
     2c6:	71 81       	ldd	r23, Z+1	; 0x01
     2c8:	82 81       	ldd	r24, Z+2	; 0x02
     2ca:	93 81       	ldd	r25, Z+3	; 0x03
     2cc:	20 91 c0 02 	lds	r18, 0x02C0	; 0x8002c0 <MAF_t>
     2d0:	30 91 c1 02 	lds	r19, 0x02C1	; 0x8002c1 <MAF_t+0x1>
     2d4:	40 91 c2 02 	lds	r20, 0x02C2	; 0x8002c2 <MAF_t+0x2>
     2d8:	50 91 c3 02 	lds	r21, 0x02C3	; 0x8002c3 <MAF_t+0x3>
     2dc:	2b d6       	rcall	.+3158   	; 0xf34 <__addsf3>
     2de:	60 93 c0 02 	sts	0x02C0, r22	; 0x8002c0 <MAF_t>
     2e2:	70 93 c1 02 	sts	0x02C1, r23	; 0x8002c1 <MAF_t+0x1>
     2e6:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <MAF_t+0x2>
     2ea:	90 93 c3 02 	sts	0x02C3, r25	; 0x8002c3 <MAF_t+0x3>
     2ee:	21 96       	adiw	r28, 0x01	; 1
     2f0:	df cf       	rjmp	.-66     	; 0x2b0 <_Z32Moving_Average_Filter_thermisterd+0x34>
     2f2:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <m_t>
     2f6:	90 91 c5 02 	lds	r25, 0x02C5	; 0x8002c5 <m_t+0x1>
     2fa:	09 97       	sbiw	r24, 0x09	; 9
     2fc:	29 f4       	brne	.+10     	; 0x308 <_Z32Moving_Average_Filter_thermisterd+0x8c>
     2fe:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <m_t+0x1>
     302:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <m_t>
     306:	09 c0       	rjmp	.+18     	; 0x31a <_Z32Moving_Average_Filter_thermisterd+0x9e>
     308:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <m_t>
     30c:	90 91 c5 02 	lds	r25, 0x02C5	; 0x8002c5 <m_t+0x1>
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <m_t+0x1>
     316:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <m_t>
     31a:	60 91 c0 02 	lds	r22, 0x02C0	; 0x8002c0 <MAF_t>
     31e:	70 91 c1 02 	lds	r23, 0x02C1	; 0x8002c1 <MAF_t+0x1>
     322:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <MAF_t+0x2>
     326:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <MAF_t+0x3>
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	40 e2       	ldi	r20, 0x20	; 32
     330:	51 e4       	ldi	r21, 0x41	; 65
     332:	64 d6       	rcall	.+3272   	; 0xffc <__divsf3>
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <_Z11IIR_LPF_cdsd>:
     33a:	8f 92       	push	r8
     33c:	9f 92       	push	r9
     33e:	af 92       	push	r10
     340:	bf 92       	push	r11
     342:	cf 92       	push	r12
     344:	df 92       	push	r13
     346:	ef 92       	push	r14
     348:	ff 92       	push	r15
     34a:	0f 93       	push	r16
     34c:	1f 93       	push	r17
     34e:	cf 93       	push	r28
     350:	df 93       	push	r29
     352:	6b 01       	movw	r12, r22
     354:	7c 01       	movw	r14, r24
     356:	82 e0       	ldi	r24, 0x02	; 2
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	18 16       	cp	r1, r24
     35c:	19 06       	cpc	r1, r25
     35e:	54 f5       	brge	.+84     	; 0x3b4 <_Z11IIR_LPF_cdsd+0x7a>
     360:	ac 01       	movw	r20, r24
     362:	41 50       	subi	r20, 0x01	; 1
     364:	51 09       	sbc	r21, r1
     366:	9a 01       	movw	r18, r20
     368:	22 0f       	add	r18, r18
     36a:	33 1f       	adc	r19, r19
     36c:	22 0f       	add	r18, r18
     36e:	33 1f       	adc	r19, r19
     370:	f9 01       	movw	r30, r18
     372:	ec 54       	subi	r30, 0x4C	; 76
     374:	fd 4f       	sbci	r31, 0xFD	; 253
     376:	80 80       	ld	r8, Z
     378:	91 80       	ldd	r9, Z+1	; 0x01
     37a:	a2 80       	ldd	r10, Z+2	; 0x02
     37c:	b3 80       	ldd	r11, Z+3	; 0x03
     37e:	88 0f       	add	r24, r24
     380:	99 1f       	adc	r25, r25
     382:	88 0f       	add	r24, r24
     384:	99 1f       	adc	r25, r25
     386:	fc 01       	movw	r30, r24
     388:	ec 54       	subi	r30, 0x4C	; 76
     38a:	fd 4f       	sbci	r31, 0xFD	; 253
     38c:	80 82       	st	Z, r8
     38e:	91 82       	std	Z+1, r9	; 0x01
     390:	a2 82       	std	Z+2, r10	; 0x02
     392:	b3 82       	std	Z+3, r11	; 0x03
     394:	f9 01       	movw	r30, r18
     396:	e8 55       	subi	r30, 0x58	; 88
     398:	fd 4f       	sbci	r31, 0xFD	; 253
     39a:	00 81       	ld	r16, Z
     39c:	11 81       	ldd	r17, Z+1	; 0x01
     39e:	22 81       	ldd	r18, Z+2	; 0x02
     3a0:	33 81       	ldd	r19, Z+3	; 0x03
     3a2:	fc 01       	movw	r30, r24
     3a4:	e8 55       	subi	r30, 0x58	; 88
     3a6:	fd 4f       	sbci	r31, 0xFD	; 253
     3a8:	00 83       	st	Z, r16
     3aa:	11 83       	std	Z+1, r17	; 0x01
     3ac:	22 83       	std	Z+2, r18	; 0x02
     3ae:	33 83       	std	Z+3, r19	; 0x03
     3b0:	ca 01       	movw	r24, r20
     3b2:	d3 cf       	rjmp	.-90     	; 0x35a <_Z11IIR_LPF_cdsd+0x20>
     3b4:	c4 eb       	ldi	r28, 0xB4	; 180
     3b6:	d2 e0       	ldi	r29, 0x02	; 2
     3b8:	c8 82       	st	Y, r12
     3ba:	d9 82       	std	Y+1, r13	; 0x01
     3bc:	ea 82       	std	Y+2, r14	; 0x02
     3be:	fb 82       	std	Y+3, r15	; 0x03
     3c0:	08 ef       	ldi	r16, 0xF8	; 248
     3c2:	11 e0       	ldi	r17, 0x01	; 1
     3c4:	f8 01       	movw	r30, r16
     3c6:	60 81       	ld	r22, Z
     3c8:	71 81       	ldd	r23, Z+1	; 0x01
     3ca:	82 81       	ldd	r24, Z+2	; 0x02
     3cc:	93 81       	ldd	r25, Z+3	; 0x03
     3ce:	28 81       	ld	r18, Y
     3d0:	39 81       	ldd	r19, Y+1	; 0x01
     3d2:	4a 81       	ldd	r20, Y+2	; 0x02
     3d4:	5b 81       	ldd	r21, Y+3	; 0x03
     3d6:	84 d7       	rcall	.+3848   	; 0x12e0 <__mulsf3>
     3d8:	6b 01       	movw	r12, r22
     3da:	7c 01       	movw	r14, r24
     3dc:	f8 01       	movw	r30, r16
     3de:	64 81       	ldd	r22, Z+4	; 0x04
     3e0:	75 81       	ldd	r23, Z+5	; 0x05
     3e2:	86 81       	ldd	r24, Z+6	; 0x06
     3e4:	97 81       	ldd	r25, Z+7	; 0x07
     3e6:	2c 81       	ldd	r18, Y+4	; 0x04
     3e8:	3d 81       	ldd	r19, Y+5	; 0x05
     3ea:	4e 81       	ldd	r20, Y+6	; 0x06
     3ec:	5f 81       	ldd	r21, Y+7	; 0x07
     3ee:	78 d7       	rcall	.+3824   	; 0x12e0 <__mulsf3>
     3f0:	9b 01       	movw	r18, r22
     3f2:	ac 01       	movw	r20, r24
     3f4:	c7 01       	movw	r24, r14
     3f6:	b6 01       	movw	r22, r12
     3f8:	9d d5       	rcall	.+2874   	; 0xf34 <__addsf3>
     3fa:	6b 01       	movw	r12, r22
     3fc:	7c 01       	movw	r14, r24
     3fe:	f8 01       	movw	r30, r16
     400:	60 85       	ldd	r22, Z+8	; 0x08
     402:	71 85       	ldd	r23, Z+9	; 0x09
     404:	82 85       	ldd	r24, Z+10	; 0x0a
     406:	93 85       	ldd	r25, Z+11	; 0x0b
     408:	28 85       	ldd	r18, Y+8	; 0x08
     40a:	39 85       	ldd	r19, Y+9	; 0x09
     40c:	4a 85       	ldd	r20, Y+10	; 0x0a
     40e:	5b 85       	ldd	r21, Y+11	; 0x0b
     410:	67 d7       	rcall	.+3790   	; 0x12e0 <__mulsf3>
     412:	9b 01       	movw	r18, r22
     414:	ac 01       	movw	r20, r24
     416:	c7 01       	movw	r24, r14
     418:	b6 01       	movw	r22, r12
     41a:	8c d5       	rcall	.+2840   	; 0xf34 <__addsf3>
     41c:	6b 01       	movw	r12, r22
     41e:	7c 01       	movw	r14, r24
     420:	0c ee       	ldi	r16, 0xEC	; 236
     422:	11 e0       	ldi	r17, 0x01	; 1
     424:	f8 01       	movw	r30, r16
     426:	64 81       	ldd	r22, Z+4	; 0x04
     428:	75 81       	ldd	r23, Z+5	; 0x05
     42a:	86 81       	ldd	r24, Z+6	; 0x06
     42c:	97 81       	ldd	r25, Z+7	; 0x07
     42e:	c8 ea       	ldi	r28, 0xA8	; 168
     430:	d2 e0       	ldi	r29, 0x02	; 2
     432:	2c 81       	ldd	r18, Y+4	; 0x04
     434:	3d 81       	ldd	r19, Y+5	; 0x05
     436:	4e 81       	ldd	r20, Y+6	; 0x06
     438:	5f 81       	ldd	r21, Y+7	; 0x07
     43a:	52 d7       	rcall	.+3748   	; 0x12e0 <__mulsf3>
     43c:	9b 01       	movw	r18, r22
     43e:	ac 01       	movw	r20, r24
     440:	c7 01       	movw	r24, r14
     442:	b6 01       	movw	r22, r12
     444:	76 d5       	rcall	.+2796   	; 0xf32 <__subsf3>
     446:	6b 01       	movw	r12, r22
     448:	7c 01       	movw	r14, r24
     44a:	f8 01       	movw	r30, r16
     44c:	60 85       	ldd	r22, Z+8	; 0x08
     44e:	71 85       	ldd	r23, Z+9	; 0x09
     450:	82 85       	ldd	r24, Z+10	; 0x0a
     452:	93 85       	ldd	r25, Z+11	; 0x0b
     454:	28 85       	ldd	r18, Y+8	; 0x08
     456:	39 85       	ldd	r19, Y+9	; 0x09
     458:	4a 85       	ldd	r20, Y+10	; 0x0a
     45a:	5b 85       	ldd	r21, Y+11	; 0x0b
     45c:	41 d7       	rcall	.+3714   	; 0x12e0 <__mulsf3>
     45e:	9b 01       	movw	r18, r22
     460:	ac 01       	movw	r20, r24
     462:	c7 01       	movw	r24, r14
     464:	b6 01       	movw	r22, r12
     466:	65 d5       	rcall	.+2762   	; 0xf32 <__subsf3>
     468:	68 83       	st	Y, r22
     46a:	79 83       	std	Y+1, r23	; 0x01
     46c:	8a 83       	std	Y+2, r24	; 0x02
     46e:	9b 83       	std	Y+3, r25	; 0x03
     470:	68 81       	ld	r22, Y
     472:	79 81       	ldd	r23, Y+1	; 0x01
     474:	8a 81       	ldd	r24, Y+2	; 0x02
     476:	9b 81       	ldd	r25, Y+3	; 0x03
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	bf 90       	pop	r11
     48a:	af 90       	pop	r10
     48c:	9f 90       	pop	r9
     48e:	8f 90       	pop	r8
     490:	08 95       	ret

00000492 <_Z10FIR_LPF_30d>:
     492:	cf 92       	push	r12
     494:	df 92       	push	r13
     496:	ef 92       	push	r14
     498:	ff 92       	push	r15
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	6b 01       	movw	r12, r22
     4a0:	7c 01       	movw	r14, r24
     4a2:	8e e1       	ldi	r24, 0x1E	; 30
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	18 16       	cp	r1, r24
     4a8:	19 06       	cpc	r1, r25
     4aa:	dc f4       	brge	.+54     	; 0x4e2 <_Z10FIR_LPF_30d+0x50>
     4ac:	9c 01       	movw	r18, r24
     4ae:	21 50       	subi	r18, 0x01	; 1
     4b0:	31 09       	sbc	r19, r1
     4b2:	f9 01       	movw	r30, r18
     4b4:	ee 0f       	add	r30, r30
     4b6:	ff 1f       	adc	r31, r31
     4b8:	ee 0f       	add	r30, r30
     4ba:	ff 1f       	adc	r31, r31
     4bc:	e4 5d       	subi	r30, 0xD4	; 212
     4be:	fd 4f       	sbci	r31, 0xFD	; 253
     4c0:	40 81       	ld	r20, Z
     4c2:	51 81       	ldd	r21, Z+1	; 0x01
     4c4:	62 81       	ldd	r22, Z+2	; 0x02
     4c6:	73 81       	ldd	r23, Z+3	; 0x03
     4c8:	88 0f       	add	r24, r24
     4ca:	99 1f       	adc	r25, r25
     4cc:	88 0f       	add	r24, r24
     4ce:	99 1f       	adc	r25, r25
     4d0:	fc 01       	movw	r30, r24
     4d2:	e4 5d       	subi	r30, 0xD4	; 212
     4d4:	fd 4f       	sbci	r31, 0xFD	; 253
     4d6:	40 83       	st	Z, r20
     4d8:	51 83       	std	Z+1, r21	; 0x01
     4da:	62 83       	std	Z+2, r22	; 0x02
     4dc:	73 83       	std	Z+3, r23	; 0x03
     4de:	c9 01       	movw	r24, r18
     4e0:	e2 cf       	rjmp	.-60     	; 0x4a6 <_Z10FIR_LPF_30d+0x14>
     4e2:	c0 92 2c 02 	sts	0x022C, r12	; 0x80022c <FIR_input_30>
     4e6:	d0 92 2d 02 	sts	0x022D, r13	; 0x80022d <FIR_input_30+0x1>
     4ea:	e0 92 2e 02 	sts	0x022E, r14	; 0x80022e <FIR_input_30+0x2>
     4ee:	f0 92 2f 02 	sts	0x022F, r15	; 0x80022f <FIR_input_30+0x3>
     4f2:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <FIR>
     4f6:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <FIR+0x1>
     4fa:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <FIR+0x2>
     4fe:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <FIR+0x3>
     502:	c0 e0       	ldi	r28, 0x00	; 0
     504:	d0 e0       	ldi	r29, 0x00	; 0
     506:	cf 31       	cpi	r28, 0x1F	; 31
     508:	d1 05       	cpc	r29, r1
     50a:	4c f5       	brge	.+82     	; 0x55e <_Z10FIR_LPF_30d+0xcc>
     50c:	9e 01       	movw	r18, r28
     50e:	22 0f       	add	r18, r18
     510:	33 1f       	adc	r19, r19
     512:	22 0f       	add	r18, r18
     514:	33 1f       	adc	r19, r19
     516:	f9 01       	movw	r30, r18
     518:	e0 59       	subi	r30, 0x90	; 144
     51a:	fe 4f       	sbci	r31, 0xFE	; 254
     51c:	60 81       	ld	r22, Z
     51e:	71 81       	ldd	r23, Z+1	; 0x01
     520:	82 81       	ldd	r24, Z+2	; 0x02
     522:	93 81       	ldd	r25, Z+3	; 0x03
     524:	f9 01       	movw	r30, r18
     526:	e4 5d       	subi	r30, 0xD4	; 212
     528:	fd 4f       	sbci	r31, 0xFD	; 253
     52a:	20 81       	ld	r18, Z
     52c:	31 81       	ldd	r19, Z+1	; 0x01
     52e:	42 81       	ldd	r20, Z+2	; 0x02
     530:	53 81       	ldd	r21, Z+3	; 0x03
     532:	c0 90 28 02 	lds	r12, 0x0228	; 0x800228 <FIR>
     536:	d0 90 29 02 	lds	r13, 0x0229	; 0x800229 <FIR+0x1>
     53a:	e0 90 2a 02 	lds	r14, 0x022A	; 0x80022a <FIR+0x2>
     53e:	f0 90 2b 02 	lds	r15, 0x022B	; 0x80022b <FIR+0x3>
     542:	ce d6       	rcall	.+3484   	; 0x12e0 <__mulsf3>
     544:	a7 01       	movw	r20, r14
     546:	96 01       	movw	r18, r12
     548:	f5 d4       	rcall	.+2538   	; 0xf34 <__addsf3>
     54a:	60 93 28 02 	sts	0x0228, r22	; 0x800228 <FIR>
     54e:	70 93 29 02 	sts	0x0229, r23	; 0x800229 <FIR+0x1>
     552:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <FIR+0x2>
     556:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <FIR+0x3>
     55a:	21 96       	adiw	r28, 0x01	; 1
     55c:	d4 cf       	rjmp	.-88     	; 0x506 <_Z10FIR_LPF_30d+0x74>
     55e:	60 91 28 02 	lds	r22, 0x0228	; 0x800228 <FIR>
     562:	70 91 29 02 	lds	r23, 0x0229	; 0x800229 <FIR+0x1>
     566:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <FIR+0x2>
     56a:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <FIR+0x3>
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	ff 90       	pop	r15
     574:	ef 90       	pop	r14
     576:	df 90       	pop	r13
     578:	cf 90       	pop	r12
     57a:	08 95       	ret

0000057c <_Z11IIR_LPF_psdd>:
     57c:	8f 92       	push	r8
     57e:	9f 92       	push	r9
     580:	af 92       	push	r10
     582:	bf 92       	push	r11
     584:	cf 92       	push	r12
     586:	df 92       	push	r13
     588:	ef 92       	push	r14
     58a:	ff 92       	push	r15
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
     594:	6b 01       	movw	r12, r22
     596:	7c 01       	movw	r14, r24
     598:	82 e0       	ldi	r24, 0x02	; 2
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	18 16       	cp	r1, r24
     59e:	19 06       	cpc	r1, r25
     5a0:	54 f5       	brge	.+84     	; 0x5f6 <_Z11IIR_LPF_psdd+0x7a>
     5a2:	ac 01       	movw	r20, r24
     5a4:	41 50       	subi	r20, 0x01	; 1
     5a6:	51 09       	sbc	r21, r1
     5a8:	9a 01       	movw	r18, r20
     5aa:	22 0f       	add	r18, r18
     5ac:	33 1f       	adc	r19, r19
     5ae:	22 0f       	add	r18, r18
     5b0:	33 1f       	adc	r19, r19
     5b2:	f9 01       	movw	r30, r18
     5b4:	e4 5e       	subi	r30, 0xE4	; 228
     5b6:	fd 4f       	sbci	r31, 0xFD	; 253
     5b8:	80 80       	ld	r8, Z
     5ba:	91 80       	ldd	r9, Z+1	; 0x01
     5bc:	a2 80       	ldd	r10, Z+2	; 0x02
     5be:	b3 80       	ldd	r11, Z+3	; 0x03
     5c0:	88 0f       	add	r24, r24
     5c2:	99 1f       	adc	r25, r25
     5c4:	88 0f       	add	r24, r24
     5c6:	99 1f       	adc	r25, r25
     5c8:	fc 01       	movw	r30, r24
     5ca:	e4 5e       	subi	r30, 0xE4	; 228
     5cc:	fd 4f       	sbci	r31, 0xFD	; 253
     5ce:	80 82       	st	Z, r8
     5d0:	91 82       	std	Z+1, r9	; 0x01
     5d2:	a2 82       	std	Z+2, r10	; 0x02
     5d4:	b3 82       	std	Z+3, r11	; 0x03
     5d6:	f9 01       	movw	r30, r18
     5d8:	e0 5f       	subi	r30, 0xF0	; 240
     5da:	fd 4f       	sbci	r31, 0xFD	; 253
     5dc:	00 81       	ld	r16, Z
     5de:	11 81       	ldd	r17, Z+1	; 0x01
     5e0:	22 81       	ldd	r18, Z+2	; 0x02
     5e2:	33 81       	ldd	r19, Z+3	; 0x03
     5e4:	fc 01       	movw	r30, r24
     5e6:	e0 5f       	subi	r30, 0xF0	; 240
     5e8:	fd 4f       	sbci	r31, 0xFD	; 253
     5ea:	00 83       	st	Z, r16
     5ec:	11 83       	std	Z+1, r17	; 0x01
     5ee:	22 83       	std	Z+2, r18	; 0x02
     5f0:	33 83       	std	Z+3, r19	; 0x03
     5f2:	ca 01       	movw	r24, r20
     5f4:	d3 cf       	rjmp	.-90     	; 0x59c <_Z11IIR_LPF_psdd+0x20>
     5f6:	cc e1       	ldi	r28, 0x1C	; 28
     5f8:	d2 e0       	ldi	r29, 0x02	; 2
     5fa:	c8 82       	st	Y, r12
     5fc:	d9 82       	std	Y+1, r13	; 0x01
     5fe:	ea 82       	std	Y+2, r14	; 0x02
     600:	fb 82       	std	Y+3, r15	; 0x03
     602:	04 e6       	ldi	r16, 0x64	; 100
     604:	11 e0       	ldi	r17, 0x01	; 1
     606:	f8 01       	movw	r30, r16
     608:	60 81       	ld	r22, Z
     60a:	71 81       	ldd	r23, Z+1	; 0x01
     60c:	82 81       	ldd	r24, Z+2	; 0x02
     60e:	93 81       	ldd	r25, Z+3	; 0x03
     610:	28 81       	ld	r18, Y
     612:	39 81       	ldd	r19, Y+1	; 0x01
     614:	4a 81       	ldd	r20, Y+2	; 0x02
     616:	5b 81       	ldd	r21, Y+3	; 0x03
     618:	63 d6       	rcall	.+3270   	; 0x12e0 <__mulsf3>
     61a:	6b 01       	movw	r12, r22
     61c:	7c 01       	movw	r14, r24
     61e:	f8 01       	movw	r30, r16
     620:	64 81       	ldd	r22, Z+4	; 0x04
     622:	75 81       	ldd	r23, Z+5	; 0x05
     624:	86 81       	ldd	r24, Z+6	; 0x06
     626:	97 81       	ldd	r25, Z+7	; 0x07
     628:	2c 81       	ldd	r18, Y+4	; 0x04
     62a:	3d 81       	ldd	r19, Y+5	; 0x05
     62c:	4e 81       	ldd	r20, Y+6	; 0x06
     62e:	5f 81       	ldd	r21, Y+7	; 0x07
     630:	57 d6       	rcall	.+3246   	; 0x12e0 <__mulsf3>
     632:	9b 01       	movw	r18, r22
     634:	ac 01       	movw	r20, r24
     636:	c7 01       	movw	r24, r14
     638:	b6 01       	movw	r22, r12
     63a:	7c d4       	rcall	.+2296   	; 0xf34 <__addsf3>
     63c:	6b 01       	movw	r12, r22
     63e:	7c 01       	movw	r14, r24
     640:	f8 01       	movw	r30, r16
     642:	60 85       	ldd	r22, Z+8	; 0x08
     644:	71 85       	ldd	r23, Z+9	; 0x09
     646:	82 85       	ldd	r24, Z+10	; 0x0a
     648:	93 85       	ldd	r25, Z+11	; 0x0b
     64a:	28 85       	ldd	r18, Y+8	; 0x08
     64c:	39 85       	ldd	r19, Y+9	; 0x09
     64e:	4a 85       	ldd	r20, Y+10	; 0x0a
     650:	5b 85       	ldd	r21, Y+11	; 0x0b
     652:	46 d6       	rcall	.+3212   	; 0x12e0 <__mulsf3>
     654:	9b 01       	movw	r18, r22
     656:	ac 01       	movw	r20, r24
     658:	c7 01       	movw	r24, r14
     65a:	b6 01       	movw	r22, r12
     65c:	6b d4       	rcall	.+2262   	; 0xf34 <__addsf3>
     65e:	6b 01       	movw	r12, r22
     660:	7c 01       	movw	r14, r24
     662:	08 e5       	ldi	r16, 0x58	; 88
     664:	11 e0       	ldi	r17, 0x01	; 1
     666:	f8 01       	movw	r30, r16
     668:	64 81       	ldd	r22, Z+4	; 0x04
     66a:	75 81       	ldd	r23, Z+5	; 0x05
     66c:	86 81       	ldd	r24, Z+6	; 0x06
     66e:	97 81       	ldd	r25, Z+7	; 0x07
     670:	c0 e1       	ldi	r28, 0x10	; 16
     672:	d2 e0       	ldi	r29, 0x02	; 2
     674:	2c 81       	ldd	r18, Y+4	; 0x04
     676:	3d 81       	ldd	r19, Y+5	; 0x05
     678:	4e 81       	ldd	r20, Y+6	; 0x06
     67a:	5f 81       	ldd	r21, Y+7	; 0x07
     67c:	31 d6       	rcall	.+3170   	; 0x12e0 <__mulsf3>
     67e:	9b 01       	movw	r18, r22
     680:	ac 01       	movw	r20, r24
     682:	c7 01       	movw	r24, r14
     684:	b6 01       	movw	r22, r12
     686:	55 d4       	rcall	.+2218   	; 0xf32 <__subsf3>
     688:	6b 01       	movw	r12, r22
     68a:	7c 01       	movw	r14, r24
     68c:	f8 01       	movw	r30, r16
     68e:	60 85       	ldd	r22, Z+8	; 0x08
     690:	71 85       	ldd	r23, Z+9	; 0x09
     692:	82 85       	ldd	r24, Z+10	; 0x0a
     694:	93 85       	ldd	r25, Z+11	; 0x0b
     696:	28 85       	ldd	r18, Y+8	; 0x08
     698:	39 85       	ldd	r19, Y+9	; 0x09
     69a:	4a 85       	ldd	r20, Y+10	; 0x0a
     69c:	5b 85       	ldd	r21, Y+11	; 0x0b
     69e:	20 d6       	rcall	.+3136   	; 0x12e0 <__mulsf3>
     6a0:	9b 01       	movw	r18, r22
     6a2:	ac 01       	movw	r20, r24
     6a4:	c7 01       	movw	r24, r14
     6a6:	b6 01       	movw	r22, r12
     6a8:	44 d4       	rcall	.+2184   	; 0xf32 <__subsf3>
     6aa:	68 83       	st	Y, r22
     6ac:	79 83       	std	Y+1, r23	; 0x01
     6ae:	8a 83       	std	Y+2, r24	; 0x02
     6b0:	9b 83       	std	Y+3, r25	; 0x03
     6b2:	68 81       	ld	r22, Y
     6b4:	79 81       	ldd	r23, Y+1	; 0x01
     6b6:	8a 81       	ldd	r24, Y+2	; 0x02
     6b8:	9b 81       	ldd	r25, Y+3	; 0x03
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	1f 91       	pop	r17
     6c0:	0f 91       	pop	r16
     6c2:	ff 90       	pop	r15
     6c4:	ef 90       	pop	r14
     6c6:	df 90       	pop	r13
     6c8:	cf 90       	pop	r12
     6ca:	bf 90       	pop	r11
     6cc:	af 90       	pop	r10
     6ce:	9f 90       	pop	r9
     6d0:	8f 90       	pop	r8
     6d2:	08 95       	ret

000006d4 <_Z16FIR_LPF_10_waterd>:
     6d4:	cf 92       	push	r12
     6d6:	df 92       	push	r13
     6d8:	ef 92       	push	r14
     6da:	ff 92       	push	r15
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	6b 01       	movw	r12, r22
     6e2:	7c 01       	movw	r14, r24
     6e4:	8a e0       	ldi	r24, 0x0A	; 10
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	18 16       	cp	r1, r24
     6ea:	19 06       	cpc	r1, r25
     6ec:	dc f4       	brge	.+54     	; 0x724 <_Z16FIR_LPF_10_waterd+0x50>
     6ee:	9c 01       	movw	r18, r24
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	31 09       	sbc	r19, r1
     6f4:	f9 01       	movw	r30, r18
     6f6:	ee 0f       	add	r30, r30
     6f8:	ff 1f       	adc	r31, r31
     6fa:	ee 0f       	add	r30, r30
     6fc:	ff 1f       	adc	r31, r31
     6fe:	e4 5d       	subi	r30, 0xD4	; 212
     700:	fe 4f       	sbci	r31, 0xFE	; 254
     702:	40 81       	ld	r20, Z
     704:	51 81       	ldd	r21, Z+1	; 0x01
     706:	62 81       	ldd	r22, Z+2	; 0x02
     708:	73 81       	ldd	r23, Z+3	; 0x03
     70a:	88 0f       	add	r24, r24
     70c:	99 1f       	adc	r25, r25
     70e:	88 0f       	add	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	fc 01       	movw	r30, r24
     714:	e4 5d       	subi	r30, 0xD4	; 212
     716:	fe 4f       	sbci	r31, 0xFE	; 254
     718:	40 83       	st	Z, r20
     71a:	51 83       	std	Z+1, r21	; 0x01
     71c:	62 83       	std	Z+2, r22	; 0x02
     71e:	73 83       	std	Z+3, r23	; 0x03
     720:	c9 01       	movw	r24, r18
     722:	e2 cf       	rjmp	.-60     	; 0x6e8 <_Z16FIR_LPF_10_waterd+0x14>
     724:	c0 92 2c 01 	sts	0x012C, r12	; 0x80012c <FIR_input_10_water>
     728:	d0 92 2d 01 	sts	0x012D, r13	; 0x80012d <FIR_input_10_water+0x1>
     72c:	e0 92 2e 01 	sts	0x012E, r14	; 0x80012e <FIR_input_10_water+0x2>
     730:	f0 92 2f 01 	sts	0x012F, r15	; 0x80012f <FIR_input_10_water+0x3>
     734:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <__data_end>
     738:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <__data_end+0x1>
     73c:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <__data_end+0x2>
     740:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <__data_end+0x3>
     744:	c0 e0       	ldi	r28, 0x00	; 0
     746:	d0 e0       	ldi	r29, 0x00	; 0
     748:	cb 30       	cpi	r28, 0x0B	; 11
     74a:	d1 05       	cpc	r29, r1
     74c:	4c f5       	brge	.+82     	; 0x7a0 <_Z16FIR_LPF_10_waterd+0xcc>
     74e:	9e 01       	movw	r18, r28
     750:	22 0f       	add	r18, r18
     752:	33 1f       	adc	r19, r19
     754:	22 0f       	add	r18, r18
     756:	33 1f       	adc	r19, r19
     758:	f9 01       	movw	r30, r18
     75a:	e0 50       	subi	r30, 0x00	; 0
     75c:	ff 4f       	sbci	r31, 0xFF	; 255
     75e:	60 81       	ld	r22, Z
     760:	71 81       	ldd	r23, Z+1	; 0x01
     762:	82 81       	ldd	r24, Z+2	; 0x02
     764:	93 81       	ldd	r25, Z+3	; 0x03
     766:	f9 01       	movw	r30, r18
     768:	e4 5d       	subi	r30, 0xD4	; 212
     76a:	fe 4f       	sbci	r31, 0xFE	; 254
     76c:	20 81       	ld	r18, Z
     76e:	31 81       	ldd	r19, Z+1	; 0x01
     770:	42 81       	ldd	r20, Z+2	; 0x02
     772:	53 81       	ldd	r21, Z+3	; 0x03
     774:	c0 90 0c 02 	lds	r12, 0x020C	; 0x80020c <__data_end>
     778:	d0 90 0d 02 	lds	r13, 0x020D	; 0x80020d <__data_end+0x1>
     77c:	e0 90 0e 02 	lds	r14, 0x020E	; 0x80020e <__data_end+0x2>
     780:	f0 90 0f 02 	lds	r15, 0x020F	; 0x80020f <__data_end+0x3>
     784:	ad d5       	rcall	.+2906   	; 0x12e0 <__mulsf3>
     786:	a7 01       	movw	r20, r14
     788:	96 01       	movw	r18, r12
     78a:	d4 d3       	rcall	.+1960   	; 0xf34 <__addsf3>
     78c:	60 93 0c 02 	sts	0x020C, r22	; 0x80020c <__data_end>
     790:	70 93 0d 02 	sts	0x020D, r23	; 0x80020d <__data_end+0x1>
     794:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <__data_end+0x2>
     798:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <__data_end+0x3>
     79c:	21 96       	adiw	r28, 0x01	; 1
     79e:	d4 cf       	rjmp	.-88     	; 0x748 <_Z16FIR_LPF_10_waterd+0x74>
     7a0:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <__data_end>
     7a4:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <__data_end+0x1>
     7a8:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end+0x2>
     7ac:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x3>
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	df 90       	pop	r13
     7ba:	cf 90       	pop	r12
     7bc:	08 95       	ret

000007be <_Z7readADCh>:

// ADC 값 읽기 함수 // ADMUX 선택하는 함수
uint16_t readADC(uint8_t channel)
{
	ADMUX = (ADMUX & 0xF8) | (channel & 0x07); // 채널 선택
     7be:	97 b1       	in	r25, 0x07	; 7
     7c0:	98 7f       	andi	r25, 0xF8	; 248
     7c2:	87 70       	andi	r24, 0x07	; 7
     7c4:	89 2b       	or	r24, r25
     7c6:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1 << ADSC); // 변환 시작
     7c8:	86 b1       	in	r24, 0x06	; 6
     7ca:	80 64       	ori	r24, 0x40	; 64
     7cc:	86 b9       	out	0x06, r24	; 6
	while (ADCSRA & (1 << ADSC)); // 변환 완료 대기
     7ce:	36 99       	sbic	0x06, 6	; 6
     7d0:	fe cf       	rjmp	.-4      	; 0x7ce <_Z7readADCh+0x10>
	return ADC;
     7d2:	84 b1       	in	r24, 0x04	; 4
     7d4:	95 b1       	in	r25, 0x05	; 5
}
     7d6:	08 95       	ret

000007d8 <_Z9set_servod>:

// 서보모터 pwm
unsigned int set_servo(double angle)
{
     7d8:	cf 92       	push	r12
     7da:	df 92       	push	r13
     7dc:	ef 92       	push	r14
     7de:	ff 92       	push	r15
	// 0 : 0.5ms , 90 : 1.5ms , 180 : 2.5ms
	double width;
	double duty;
	
	width = (angle/90) + 0.5;
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	44 eb       	ldi	r20, 0xB4	; 180
     7e6:	52 e4       	ldi	r21, 0x42	; 66
     7e8:	09 d4       	rcall	.+2066   	; 0xffc <__divsf3>
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e0       	ldi	r20, 0x00	; 0
     7f0:	5f e3       	ldi	r21, 0x3F	; 63
     7f2:	a0 d3       	rcall	.+1856   	; 0xf34 <__addsf3>
	
	duty = (width / 20.0) *100 ;
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 ea       	ldi	r20, 0xA0	; 160
     7fa:	51 e4       	ldi	r21, 0x41	; 65
     7fc:	ff d3       	rcall	.+2046   	; 0xffc <__divsf3>
     7fe:	20 e0       	ldi	r18, 0x00	; 0
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	48 ec       	ldi	r20, 0xC8	; 200
     804:	52 e4       	ldi	r21, 0x42	; 66
     806:	6c d5       	rcall	.+2776   	; 0x12e0 <__mulsf3>
	
	OCR3C = int(duty/100 *ICR3);
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	48 ec       	ldi	r20, 0xC8	; 200
     80e:	52 e4       	ldi	r21, 0x42	; 66
     810:	f5 d3       	rcall	.+2026   	; 0xffc <__divsf3>
     812:	6b 01       	movw	r12, r22
     814:	7c 01       	movw	r14, r24
     816:	60 91 80 00 	lds	r22, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     81a:	70 91 81 00 	lds	r23, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	85 d4       	rcall	.+2314   	; 0x112e <__floatunsisf>
     824:	a7 01       	movw	r20, r14
     826:	96 01       	movw	r18, r12
     828:	5b d5       	rcall	.+2742   	; 0x12e0 <__mulsf3>
     82a:	50 d4       	rcall	.+2208   	; 0x10cc <__fixsfsi>
     82c:	e2 e8       	ldi	r30, 0x82	; 130
     82e:	f0 e0       	ldi	r31, 0x00	; 0
     830:	71 83       	std	Z+1, r23	; 0x01
     832:	60 83       	st	Z, r22
	return OCR3C;
     834:	80 81       	ld	r24, Z
     836:	91 81       	ldd	r25, Z+1	; 0x01
}
     838:	ff 90       	pop	r15
     83a:	ef 90       	pop	r14
     83c:	df 90       	pop	r13
     83e:	cf 90       	pop	r12
     840:	08 95       	ret

00000842 <_Z17get_Potentiometerv>:

// 가변저항
double get_Potentiometer(void)
{
	uint16_t adc = readADC(0); // ADC0 활성화
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	bc df       	rcall	.-136    	; 0x7be <_Z7readADCh>
	
	double filtered_adc = Low_Pass_Filter(adc); // LPF로 ADC값 필터링
     846:	bc 01       	movw	r22, r24
     848:	80 e0       	ldi	r24, 0x00	; 0
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	70 d4       	rcall	.+2272   	; 0x112e <__floatunsisf>
     84e:	b0 dc       	rcall	.-1696   	; 0x1b0 <_Z15Low_Pass_Filterd>
	double Vadc = (double)filtered_adc * 5.0 / 1023.0; // ADC값 전압으로 변환
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	40 ea       	ldi	r20, 0xA0	; 160
     856:	50 e4       	ldi	r21, 0x40	; 64
     858:	43 d5       	rcall	.+2694   	; 0x12e0 <__mulsf3>
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 ec       	ldi	r19, 0xC0	; 192
     85e:	4f e7       	ldi	r20, 0x7F	; 127
     860:	54 e4       	ldi	r21, 0x44	; 68
	int res = (int)Vadc;
     862:	cc d3       	rcall	.+1944   	; 0xffc <__divsf3>
	
	//USART0_NUM(adc);
	//USART0_TX(44); // ',' 문자
	//USART0_TX(13);
	
	return res;
     864:	33 d4       	rcall	.+2150   	; 0x10cc <__fixsfsi>
     866:	07 2e       	mov	r0, r23
     868:	00 0c       	add	r0, r0
     86a:	88 0b       	sbc	r24, r24
     86c:	99 0b       	sbc	r25, r25
     86e:	61 c4       	rjmp	.+2242   	; 0x1132 <__floatsisf>
}
     870:	08 95       	ret

00000872 <_Z7get_cdsv>:

// 조도센서
double get_cds(void)
{
	uint16_t adc = readADC(1); // ADC1 활성화
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	a4 df       	rcall	.-184    	; 0x7be <_Z7readADCh>
	adc = IIR_LPF_cds(adc); // IIR로 필터링
     876:	bc 01       	movw	r22, r24
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	58 d4       	rcall	.+2224   	; 0x112e <__floatunsisf>
     87e:	5d dd       	rcall	.-1350   	; 0x33a <_Z11IIR_LPF_cdsd>
     880:	2a d4       	rcall	.+2132   	; 0x10d6 <__fixunssfsi>
	double Vadc = (double)adc * 5.0 / 1023.0; // ADC값 전압으로 변환
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	53 d4       	rcall	.+2214   	; 0x112e <__floatunsisf>
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	40 ea       	ldi	r20, 0xA0	; 160
     88e:	50 e4       	ldi	r21, 0x40	; 64
     890:	27 d5       	rcall	.+2638   	; 0x12e0 <__mulsf3>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 ec       	ldi	r19, 0xC0	; 192
     896:	4f e7       	ldi	r20, 0x7F	; 127
     898:	54 e4       	ldi	r21, 0x44	; 68
     89a:	b0 d3       	rcall	.+1888   	; 0xffc <__divsf3>
     89c:	9b 01       	movw	r18, r22
     89e:	ac 01       	movw	r20, r24
	
	//------------수치화---------------
	int R = 4700;
	double R_cds = (R*5)/Vadc - R; // CDS의 저항값
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	78 e9       	ldi	r23, 0x98	; 152
     8a4:	87 eb       	ldi	r24, 0xB7	; 183
     8a6:	96 e4       	ldi	r25, 0x46	; 70
     8a8:	a9 d3       	rcall	.+1874   	; 0xffc <__divsf3>
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	30 ee       	ldi	r19, 0xE0	; 224
     8ae:	42 e9       	ldi	r20, 0x92	; 146
     8b0:	55 e4       	ldi	r21, 0x45	; 69
	double gamma = 0.8;
	double lux = pow(10,1-(log10(R_cds)-log10(40000))/gamma); // LUX단위로 변환
     8b2:	3f d3       	rcall	.+1662   	; 0xf32 <__subsf3>
     8b4:	ca d4       	rcall	.+2452   	; 0x124a <log10>
     8b6:	23 e1       	ldi	r18, 0x13	; 19
     8b8:	34 e4       	ldi	r19, 0x44	; 68
     8ba:	43 e9       	ldi	r20, 0x93	; 147
     8bc:	50 e4       	ldi	r21, 0x40	; 64
     8be:	39 d3       	rcall	.+1650   	; 0xf32 <__subsf3>
     8c0:	2d ec       	ldi	r18, 0xCD	; 205
     8c2:	3c ec       	ldi	r19, 0xCC	; 204
     8c4:	4c e4       	ldi	r20, 0x4C	; 76
     8c6:	5f e3       	ldi	r21, 0x3F	; 63
     8c8:	99 d3       	rcall	.+1842   	; 0xffc <__divsf3>
     8ca:	9b 01       	movw	r18, r22
     8cc:	ac 01       	movw	r20, r24
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	70 e0       	ldi	r23, 0x00	; 0
     8d2:	80 e8       	ldi	r24, 0x80	; 128
     8d4:	9f e3       	ldi	r25, 0x3F	; 63
     8d6:	2d d3       	rcall	.+1626   	; 0xf32 <__subsf3>
     8d8:	9b 01       	movw	r18, r22
     8da:	ac 01       	movw	r20, r24
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	80 e2       	ldi	r24, 0x20	; 32
	
	int res = (int)lux;
     8e2:	91 e4       	ldi	r25, 0x41	; 65
     8e4:	60 d5       	rcall	.+2752   	; 0x13a6 <pow>

	//USART0_NUM(adc);
	//USART0_TX(44); // ',' 문자
	//USART0_TX(13);
	
	return res;
     8e6:	f2 d3       	rcall	.+2020   	; 0x10cc <__fixsfsi>
     8e8:	07 2e       	mov	r0, r23
     8ea:	00 0c       	add	r0, r0
     8ec:	88 0b       	sbc	r24, r24
     8ee:	99 0b       	sbc	r25, r25
     8f0:	20 c4       	rjmp	.+2112   	; 0x1132 <__floatsisf>

000008f2 <_Z14get_Thermistorv>:
}
     8f2:	83 e0       	ldi	r24, 0x03	; 3

// 온도센서
double get_Thermistor()
{
	uint16_t adc = readADC(3); // ADC3 활성화
     8f4:	64 df       	rcall	.-312    	; 0x7be <_Z7readADCh>
	adc = Moving_Average_Filter_thermister(adc); // MAF로 ADC값 필터링
     8f6:	bc 01       	movw	r22, r24
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	18 d4       	rcall	.+2096   	; 0x112e <__floatunsisf>
     8fe:	be dc       	rcall	.-1668   	; 0x27c <_Z32Moving_Average_Filter_thermisterd>
     900:	ea d3       	rcall	.+2004   	; 0x10d6 <__fixunssfsi>
	double Vadc = adc * 5.0 / 1024.0;
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	13 d4       	rcall	.+2086   	; 0x112e <__floatunsisf>
     908:	20 e0       	ldi	r18, 0x00	; 0
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	40 ea       	ldi	r20, 0xA0	; 160
     90e:	50 e4       	ldi	r21, 0x40	; 64
     910:	e7 d4       	rcall	.+2510   	; 0x12e0 <__mulsf3>
     912:	20 e0       	ldi	r18, 0x00	; 0
     914:	30 e0       	ldi	r19, 0x00	; 0
     916:	40 e8       	ldi	r20, 0x80	; 128
     918:	5a e3       	ldi	r21, 0x3A	; 58
     91a:	e2 d4       	rcall	.+2500   	; 0x12e0 <__mulsf3>
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
	
	//-----수치변환---------------------
	double Rth = (5.0/Vadc) * 4700 - 4700;
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	80 ea       	ldi	r24, 0xA0	; 160
     926:	90 e4       	ldi	r25, 0x40	; 64
     928:	69 d3       	rcall	.+1746   	; 0xffc <__divsf3>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 ee       	ldi	r19, 0xE0	; 224
     92e:	42 e9       	ldi	r20, 0x92	; 146
     930:	55 e4       	ldi	r21, 0x45	; 69
     932:	d6 d4       	rcall	.+2476   	; 0x12e0 <__mulsf3>
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	30 ee       	ldi	r19, 0xE0	; 224
     938:	42 e9       	ldi	r20, 0x92	; 146
     93a:	55 e4       	ldi	r21, 0x45	; 69
	double T = 1/ (0.0033 + (0.000274)*log(Rth/1000)); //[K]
     93c:	fa d2       	rcall	.+1524   	; 0xf32 <__subsf3>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	4a e7       	ldi	r20, 0x7A	; 122
     944:	54 e4       	ldi	r21, 0x44	; 68
     946:	5a d3       	rcall	.+1716   	; 0xffc <__divsf3>
     948:	8b d4       	rcall	.+2326   	; 0x1260 <log>
     94a:	28 ea       	ldi	r18, 0xA8	; 168
     94c:	37 ea       	ldi	r19, 0xA7	; 167
     94e:	4f e8       	ldi	r20, 0x8F	; 143
     950:	59 e3       	ldi	r21, 0x39	; 57
     952:	c6 d4       	rcall	.+2444   	; 0x12e0 <__mulsf3>
     954:	20 ed       	ldi	r18, 0xD0	; 208
     956:	34 e4       	ldi	r19, 0x44	; 68
     958:	48 e5       	ldi	r20, 0x58	; 88
     95a:	5b e3       	ldi	r21, 0x3B	; 59
     95c:	eb d2       	rcall	.+1494   	; 0xf34 <__addsf3>
     95e:	9b 01       	movw	r18, r22
     960:	ac 01       	movw	r20, r24
     962:	60 e0       	ldi	r22, 0x00	; 0
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	80 e8       	ldi	r24, 0x80	; 128
     968:	9f e3       	ldi	r25, 0x3F	; 63
	T = T - 273.15; //[C]
     96a:	48 d3       	rcall	.+1680   	; 0xffc <__divsf3>
     96c:	23 e3       	ldi	r18, 0x33	; 51
     96e:	33 e9       	ldi	r19, 0x93	; 147
     970:	48 e8       	ldi	r20, 0x88	; 136
     972:	53 e4       	ldi	r21, 0x43	; 67
     974:	de d2       	rcall	.+1468   	; 0xf32 <__subsf3>
	
	int res = (int)T;
     976:	aa d3       	rcall	.+1876   	; 0x10cc <__fixsfsi>
     978:	07 2e       	mov	r0, r23
	
	//USART0_NUM(T);
	//USART0_TX(44); // ',' 문자
	//USART0_TX(13);
	
	return res;
     97a:	00 0c       	add	r0, r0
     97c:	88 0b       	sbc	r24, r24
     97e:	99 0b       	sbc	r25, r25
     980:	d8 c3       	rjmp	.+1968   	; 0x1132 <__floatsisf>

00000982 <_Z7get_PSDv>:
     982:	84 e0       	ldi	r24, 0x04	; 4
     984:	1c df       	rcall	.-456    	; 0x7be <_Z7readADCh>
}
     986:	bc 01       	movw	r22, r24

// PSD센서
double get_PSD()
{
	uint16_t adc = readADC(4); // ADC4 활성화
	adc = IIR_LPF_psd(adc); // IIR로 필터링
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	d0 d3       	rcall	.+1952   	; 0x112e <__floatunsisf>
     98e:	f6 dd       	rcall	.-1044   	; 0x57c <_Z11IIR_LPF_psdd>
     990:	a2 d3       	rcall	.+1860   	; 0x10d6 <__fixunssfsi>
	double Vadc = adc * 5.0 / 1024.0; // ADC값 전압으로 변환
     992:	80 e0       	ldi	r24, 0x00	; 0
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	cb d3       	rcall	.+1942   	; 0x112e <__floatunsisf>
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	40 ea       	ldi	r20, 0xA0	; 160
     99e:	50 e4       	ldi	r21, 0x40	; 64
     9a0:	9f d4       	rcall	.+2366   	; 0x12e0 <__mulsf3>
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e8       	ldi	r20, 0x80	; 128
     9a8:	5a e3       	ldi	r21, 0x3A	; 58
     9aa:	9a d4       	rcall	.+2356   	; 0x12e0 <__mulsf3>
	
	//-----수치변환---------------------
	double dist = (27.61)/(Vadc * 1000.0 - 0.1696)*1000.0;
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	4a e7       	ldi	r20, 0x7A	; 122
     9b2:	54 e4       	ldi	r21, 0x44	; 68
     9b4:	95 d4       	rcall	.+2346   	; 0x12e0 <__mulsf3>
     9b6:	2f e9       	ldi	r18, 0x9F	; 159
     9b8:	3b ea       	ldi	r19, 0xAB	; 171
     9ba:	4d e2       	ldi	r20, 0x2D	; 45
     9bc:	5e e3       	ldi	r21, 0x3E	; 62
     9be:	b9 d2       	rcall	.+1394   	; 0xf32 <__subsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	68 e4       	ldi	r22, 0x48	; 72
     9c6:	71 ee       	ldi	r23, 0xE1	; 225
     9c8:	8c ed       	ldi	r24, 0xDC	; 220
     9ca:	91 e4       	ldi	r25, 0x41	; 65
     9cc:	17 d3       	rcall	.+1582   	; 0xffc <__divsf3>
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	4a e7       	ldi	r20, 0x7A	; 122
     9d4:	54 e4       	ldi	r21, 0x44	; 68
     9d6:	84 c4       	rjmp	.+2312   	; 0x12e0 <__mulsf3>

000009d8 <_Z9get_soundv>:
	
	//int res = (int)dist;
	
	//return res;
	return dist;
}
     9d8:	85 e0       	ldi	r24, 0x05	; 5

// 사운드 센서
double get_sound()
{
	uint16_t adc = readADC(5); // ADC5 활성화
     9da:	f1 de       	rcall	.-542    	; 0x7be <_Z7readADCh>
	double filtered_adc = FIR_LPF_30(adc);
     9dc:	bc 01       	movw	r22, r24
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	a5 d3       	rcall	.+1866   	; 0x112e <__floatunsisf>
	
	//USART0_NUM(filtered_adc);
	//USART0_TX(44); // ',' 문자
	//USART0_TX(13);
	
	int res = (int)filtered_adc;
     9e4:	56 dd       	rcall	.-1364   	; 0x492 <_Z10FIR_LPF_30d>
     9e6:	72 d3       	rcall	.+1764   	; 0x10cc <__fixsfsi>
	
	return res;
     9e8:	07 2e       	mov	r0, r23
     9ea:	00 0c       	add	r0, r0
     9ec:	88 0b       	sbc	r24, r24
     9ee:	99 0b       	sbc	r25, r25
}
     9f0:	a0 c3       	rjmp	.+1856   	; 0x1132 <__floatsisf>

000009f2 <_Z9get_waterv>:

// 빗물 감지 센서
double get_water()
{
	uint16_t adc = readADC(6); // ADC6 활성화
     9f2:	86 e0       	ldi	r24, 0x06	; 6
     9f4:	e4 de       	rcall	.-568    	; 0x7be <_Z7readADCh>
	double filtered_adc = FIR_LPF_10_water(adc); // FIR 10차로 필터링
     9f6:	bc 01       	movw	r22, r24
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	98 d3       	rcall	.+1840   	; 0x112e <__floatunsisf>
	
	//USART0_NUM(adc);
	//USART0_TX(44); // ',' 문자
	//USART0_TX(13);
	//return Vadc;
	int res = (int)filtered_adc;
     9fe:	6a de       	rcall	.-812    	; 0x6d4 <_Z16FIR_LPF_10_waterd>
     a00:	65 d3       	rcall	.+1738   	; 0x10cc <__fixsfsi>
	
	return res;
     a02:	07 2e       	mov	r0, r23
     a04:	00 0c       	add	r0, r0
     a06:	88 0b       	sbc	r24, r24
     a08:	99 0b       	sbc	r25, r25
}
     a0a:	93 c3       	rjmp	.+1830   	; 0x1132 <__floatsisf>

00000a0c <__vector_10>:


ISR(TIMER2_OVF_vect)
{
     a0c:	1f 92       	push	r1
     a0e:	0f 92       	push	r0
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	0f 92       	push	r0
     a14:	11 24       	eor	r1, r1
     a16:	0b b6       	in	r0, 0x3b	; 59
     a18:	0f 92       	push	r0
     a1a:	2f 93       	push	r18
     a1c:	3f 93       	push	r19
     a1e:	4f 93       	push	r20
     a20:	5f 93       	push	r21
     a22:	6f 93       	push	r22
     a24:	7f 93       	push	r23
     a26:	8f 93       	push	r24
     a28:	9f 93       	push	r25
     a2a:	af 93       	push	r26
     a2c:	bf 93       	push	r27
     a2e:	ef 93       	push	r30
     a30:	ff 93       	push	r31
	g_cnt++;
     a32:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <g_cnt>
     a36:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <g_cnt+0x1>
     a3a:	01 96       	adiw	r24, 0x01	; 1
     a3c:	90 93 0b 03 	sts	0x030B, r25	; 0x80030b <g_cnt+0x1>
     a40:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <g_cnt>
	
	// 전체 선세의 값을 제어 주기를 통해 받아옴
	potentiometer_res = get_Potentiometer();
     a44:	fe de       	rcall	.-516    	; 0x842 <_Z17get_Potentiometerv>
     a46:	47 d3       	rcall	.+1678   	; 0x10d6 <__fixunssfsi>
     a48:	70 93 05 03 	sts	0x0305, r23	; 0x800305 <potentiometer_res+0x1>
     a4c:	60 93 04 03 	sts	0x0304, r22	; 0x800304 <potentiometer_res>
	cds_res = get_cds();
     a50:	10 df       	rcall	.-480    	; 0x872 <_Z7get_cdsv>
     a52:	41 d3       	rcall	.+1666   	; 0x10d6 <__fixunssfsi>
     a54:	70 93 03 03 	sts	0x0303, r23	; 0x800303 <cds_res+0x1>
     a58:	60 93 02 03 	sts	0x0302, r22	; 0x800302 <cds_res>
	thermister_res = get_Thermistor();
     a5c:	4a df       	rcall	.-364    	; 0x8f2 <_Z14get_Thermistorv>
     a5e:	3b d3       	rcall	.+1654   	; 0x10d6 <__fixunssfsi>
     a60:	70 93 01 03 	sts	0x0301, r23	; 0x800301 <thermister_res+0x1>
     a64:	60 93 00 03 	sts	0x0300, r22	; 0x800300 <thermister_res>
	psd_res = get_PSD();
     a68:	8c df       	rcall	.-232    	; 0x982 <_Z7get_PSDv>
     a6a:	35 d3       	rcall	.+1642   	; 0x10d6 <__fixunssfsi>
     a6c:	70 93 ff 02 	sts	0x02FF, r23	; 0x8002ff <psd_res+0x1>
     a70:	60 93 fe 02 	sts	0x02FE, r22	; 0x8002fe <psd_res>
	sound_res = get_sound();
     a74:	b1 df       	rcall	.-158    	; 0x9d8 <_Z9get_soundv>
     a76:	2f d3       	rcall	.+1630   	; 0x10d6 <__fixunssfsi>
     a78:	70 93 fd 02 	sts	0x02FD, r23	; 0x8002fd <sound_res+0x1>
     a7c:	60 93 fc 02 	sts	0x02FC, r22	; 0x8002fc <sound_res>
     a80:	b8 df       	rcall	.-144    	; 0x9f2 <_Z9get_waterv>
     a82:	29 d3       	rcall	.+1618   	; 0x10d6 <__fixunssfsi>
	water_res = get_water();
     a84:	70 93 fb 02 	sts	0x02FB, r23	; 0x8002fb <water_res+0x1>
     a88:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <water_res>
     a8c:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <g_cnt>
     a90:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <g_cnt+0x1>

	if(g_cnt == 100) //1000ms
     a94:	84 36       	cpi	r24, 0x64	; 100
     a96:	91 05       	cpc	r25, r1
     a98:	21 f4       	brne	.+8      	; 0xaa2 <__vector_10+0x96>
     a9a:	10 92 0b 03 	sts	0x030B, r1	; 0x80030b <g_cnt+0x1>
     a9e:	10 92 0a 03 	sts	0x030A, r1	; 0x80030a <g_cnt>
	{
		g_cnt = 0;
     aa2:	84 e6       	ldi	r24, 0x64	; 100
     aa4:	84 bd       	out	0x24, r24	; 36
     aa6:	ff 91       	pop	r31
     aa8:	ef 91       	pop	r30
		
		//USART0_TX(13);	// 출력할 때 enter 출력
	}
	
    // 타이머 초기값 재설정
	TCNT2 = 256-156;  // 1ms마다 오버플로우 발생을 유지하기 위해 다시 설정
     aaa:	bf 91       	pop	r27
     aac:	af 91       	pop	r26
}
     aae:	9f 91       	pop	r25
     ab0:	8f 91       	pop	r24
     ab2:	7f 91       	pop	r23
     ab4:	6f 91       	pop	r22
     ab6:	5f 91       	pop	r21
     ab8:	4f 91       	pop	r20
     aba:	3f 91       	pop	r19
     abc:	2f 91       	pop	r18
     abe:	0f 90       	pop	r0
     ac0:	0b be       	out	0x3b, r0	; 59
     ac2:	0f 90       	pop	r0
     ac4:	0f be       	out	0x3f, r0	; 63
     ac6:	0f 90       	pop	r0
     ac8:	1f 90       	pop	r1
     aca:	18 95       	reti

00000acc <main>:
     acc:	8f ef       	ldi	r24, 0xFF	; 255
     ace:	8a bb       	out	0x1a, r24	; 26
     ad0:	90 e7       	ldi	r25, 0x70	; 112
     ad2:	97 bb       	out	0x17, r25	; 23

int main(void)
{
	DDRA = 0xFF;
	DDRB = (1<< PB4) | (1 << PB5) | (1 << PB6);
	DDRE = (1 << PE3) | (1 << PE4) | (1 << PE5);
     ad4:	98 e3       	ldi	r25, 0x38	; 56
     ad6:	92 b9       	out	0x02, r25	; 2

	
	PORTA = 0xFF;
     ad8:	8b bb       	out	0x1b, r24	; 27
	PORTB = (0 << PB5) | (0 << PB6);
     ada:	18 ba       	out	0x18, r1	; 24
	PORTE = 0xFF; // RGB led 초기상태 off
     adc:	83 b9       	out	0x03, r24	; 3
	//timer0_init(); // 타이머 0 초기화
	
	// -----------------------ADC---------------
	DDRF = 0x00;
     ade:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	ADCSRA = 0b10000111; // 분주비가 작을수록 오차가 큼
     ae2:	87 e8       	ldi	r24, 0x87	; 135
     ae4:	86 b9       	out	0x06, r24	; 6
	
	//--------------------UART--------------------
	//BAUD = 16000000/(16*(UBRR+1)) => UBRR= 103 : 9600bps
	UBRR0L = (unsigned char)UBRR;
     ae6:	87 e6       	ldi	r24, 0x67	; 103
     ae8:	89 b9       	out	0x09, r24	; 9
	UBRR0H = (unsigned char)(UBRR>>8);
     aea:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	
	UCSR0A = 0x00;						//현재상태 : 0으로 초기화
     aee:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);		//송수신 허가
     af0:	88 e1       	ldi	r24, 0x18	; 24
     af2:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);	//비동기, non-parity mode, stop bit : 1bit, data : 8bit--> 나머지는 디폴트 0 이여서 얘만 1로 표시
     af4:	86 e0       	ldi	r24, 0x06	; 6
     af6:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>

	//---------------ITMER0----------------
	TCCR0 |= (1 << WGM00) | (1 << WGM01); // Fast PWM mode
     afa:	83 b7       	in	r24, 0x33	; 51
     afc:	88 64       	ori	r24, 0x48	; 72
     afe:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1 << COM01); // Clear OC0 on compare match, set OC0 at BOTTOM (non-inverted mode)
     b00:	83 b7       	in	r24, 0x33	; 51
     b02:	80 62       	ori	r24, 0x20	; 32
     b04:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1 << CS02) | (1 << CS01) | (0 << CS00); // Prescaler set to 256
     b06:	83 b7       	in	r24, 0x33	; 51
     b08:	86 60       	ori	r24, 0x06	; 6
     b0a:	83 bf       	out	0x33, r24	; 51
	//(16000000)/(prescaler*(255+1)=(16000000/(256*256)=244.14[Hz] --> 3옥타브 시 (음계)

	//---------------TIMER1---------------- 
	// compare match, Fast PWM, TOP : ICRn, prescaler = 64 => 20ms
	TCCR1A = (1 << COM1A1) | (0 << COM1A0) | (1 << COM1B1) | (0 << COM1B0) | (1 << WGM11) | (0 << WGM10);
     b0c:	82 ea       	ldi	r24, 0xA2	; 162
     b0e:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (1 << CS11) | (1 << CS10); // 0b 00011010 //주기 20ms 64 prescale
     b10:	2b e1       	ldi	r18, 0x1B	; 27
     b12:	2e bd       	out	0x2e, r18	; 46
	// (16000000/pre)/((top+1)-tcnt) = 50[Hz]
	// (16000000/64)/((ICR1+1)-0) = 50[Hz]
	ICR1 = 4999; // top값 설정
     b14:	87 e8       	ldi	r24, 0x87	; 135
     b16:	93 e1       	ldi	r25, 0x13	; 19
     b18:	97 bd       	out	0x27, r25	; 39
     b1a:	86 bd       	out	0x26, r24	; 38
	
	//--------------TIMER2-----------------제어주기로 사용
	//TIMER2, normal Mode, non-inverting mode, prescaler = 1024
	TCCR2 = (0 << FOC2) | (0 << WGM21) | (0 << WGM20) | (1 << COM21) | (0 << COM20) | (1 << CS22) | (0 << CS21) | (1 << CS20);
     b1c:	35 e2       	ldi	r19, 0x25	; 37
     b1e:	35 bd       	out	0x25, r19	; 37
	// TOIE2 = 1 : OverFlow Interrupt Enable
	TIMSK = (1<<TOIE2);
     b20:	30 e4       	ldi	r19, 0x40	; 64
     b22:	37 bf       	out	0x37, r19	; 55
	// (16000000/pre)/((top+1)-tcnt) = 100[Hz] 주기 10ms 타이머
	// (16000000/1024)/((255+1)-tcnt) = 100[Hz]
	// 15625/100 = 256 - tcnt
	TCNT2 = 256-156;
     b24:	34 e6       	ldi	r19, 0x64	; 100
     b26:	34 bd       	out	0x24, r19	; 36
	
	//---------------TIMER3----------------
	// compare match, Fast PWM, TOP : ICRn, prescaler = 64 => 20ms
	TCCR3A = (1 << COM3A1) | (0 << COM3A0) | (1 << COM3B1) | (0 << COM3B0) | (1 << COM3C1) | (0 << COM3C0) | (1 << WGM31) | (0 << WGM30);
     b28:	3a ea       	ldi	r19, 0xAA	; 170
     b2a:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = (1 << WGM33) | (1 << WGM32) | (0 << CS32) | (1 << CS31) | (1 << CS30); // 0b 00011010 //주기 20ms 64 prescale
     b2e:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	// (16000000/pre)/((top+1)-tcnt) = 50[Hz]
	// (16000000/64)/((ICR1+1)-0) = 50[Hz]
	ICR3 = 4999; // top값 설정
     b32:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     b36:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	
	sei();
     b3a:	78 94       	sei
	{
		//--------------Potentiometer---------------- LED색 변경
		//가변저항의 ADC값을 해당하는 전압으로 변환
		//TCCR0의 OCR0을 조절하여 타이머0의 펄스폭 변조를 통해 led 밝기 조절
			//--> 저항값 커지면 밝기 세짐, 저항 작아지면 밝기 작아짐
		if (potentiometer_res >= 1) {
     b3c:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <potentiometer_res>
     b40:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <potentiometer_res+0x1>
     b44:	00 97       	sbiw	r24, 0x00	; 0
     b46:	09 f4       	brne	.+2      	; 0xb4a <main+0x7e>
     b48:	56 c0       	rjmp	.+172    	; 0xbf6 <main+0x12a>
			switch(potentiometer_res)
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	91 05       	cpc	r25, r1
     b4e:	f9 f0       	breq	.+62     	; 0xb8e <main+0xc2>
     b50:	28 f4       	brcc	.+10     	; 0xb5c <main+0x90>
     b52:	00 97       	sbiw	r24, 0x00	; 0
     b54:	51 f0       	breq	.+20     	; 0xb6a <main+0x9e>
     b56:	01 97       	sbiw	r24, 0x01	; 1
     b58:	69 f0       	breq	.+26     	; 0xb74 <main+0xa8>
     b5a:	7c c0       	rjmp	.+248    	; 0xc54 <main+0x188>
     b5c:	84 30       	cpi	r24, 0x04	; 4
     b5e:	91 05       	cpc	r25, r1
     b60:	81 f1       	breq	.+96     	; 0xbc2 <main+0xf6>
     b62:	10 f1       	brcs	.+68     	; 0xba8 <main+0xdc>
     b64:	05 97       	sbiw	r24, 0x05	; 5
     b66:	d1 f1       	breq	.+116    	; 0xbdc <main+0x110>
     b68:	75 c0       	rjmp	.+234    	; 0xc54 <main+0x188>
			{
				case 0:
					OCR3A = 0;
     b6a:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     b6e:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
					break;
     b72:	70 c0       	rjmp	.+224    	; 0xc54 <main+0x188>
				case 1:
					OCR3A = 10;
     b74:	8a e0       	ldi	r24, 0x0A	; 10
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     b7c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
					OCR3B = 4500;
     b80:	84 e9       	ldi	r24, 0x94	; 148
     b82:	91 e1       	ldi	r25, 0x11	; 17
     b84:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b88:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
					break;
     b8c:	63 c0       	rjmp	.+198    	; 0xc54 <main+0x188>
				case 2:
					OCR3A = 2000;
     b8e:	80 ed       	ldi	r24, 0xD0	; 208
     b90:	97 e0       	ldi	r25, 0x07	; 7
     b92:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     b96:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
					OCR3B = 4500;
     b9a:	84 e9       	ldi	r24, 0x94	; 148
     b9c:	91 e1       	ldi	r25, 0x11	; 17
     b9e:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ba2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
					break;
     ba6:	56 c0       	rjmp	.+172    	; 0xc54 <main+0x188>
				case 3:
					OCR3A = 3000;
     ba8:	88 eb       	ldi	r24, 0xB8	; 184
     baa:	9b e0       	ldi	r25, 0x0B	; 11
     bac:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     bb0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
					OCR3B = 4500;
     bb4:	84 e9       	ldi	r24, 0x94	; 148
     bb6:	91 e1       	ldi	r25, 0x11	; 17
     bb8:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bbc:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
					break;
     bc0:	49 c0       	rjmp	.+146    	; 0xc54 <main+0x188>
				case 4:
					OCR3A = 4000;
     bc2:	80 ea       	ldi	r24, 0xA0	; 160
     bc4:	9f e0       	ldi	r25, 0x0F	; 15
     bc6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     bca:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
					OCR3B = 4500;
     bce:	84 e9       	ldi	r24, 0x94	; 148
     bd0:	91 e1       	ldi	r25, 0x11	; 17
     bd2:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bd6:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
					break;
     bda:	3c c0       	rjmp	.+120    	; 0xc54 <main+0x188>
				case 5:
					OCR3A = 4999;
     bdc:	87 e8       	ldi	r24, 0x87	; 135
     bde:	93 e1       	ldi	r25, 0x13	; 19
     be0:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     be4:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
					OCR3B = 4500;
     be8:	84 e9       	ldi	r24, 0x94	; 148
     bea:	91 e1       	ldi	r25, 0x11	; 17
     bec:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bf0:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
					break;
     bf4:	2f c0       	rjmp	.+94     	; 0xc54 <main+0x188>
		else
		{
			// -----------------CDS---------------------- LED 밝기 변경
			// 센서의 Analog Output을 Lux단위로 값을 변환
			// 주변의 밝기에 따라 효율적으로 LED PWM 조절
			if(cds_res <= 150){
     bf6:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <cds_res>
     bfa:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <cds_res+0x1>
     bfe:	87 39       	cpi	r24, 0x97	; 151
     c00:	91 05       	cpc	r25, r1
     c02:	38 f4       	brcc	.+14     	; 0xc12 <main+0x146>
				OCR3B = 4500; // 어두운 경우
     c04:	84 e9       	ldi	r24, 0x94	; 148
     c06:	91 e1       	ldi	r25, 0x11	; 17
     c08:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c0c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c10:	21 c0       	rjmp	.+66     	; 0xc54 <main+0x188>
			}
			else if(cds_res >= 150 && cds_res <= 400){
     c12:	9c 01       	movw	r18, r24
     c14:	26 59       	subi	r18, 0x96	; 150
     c16:	31 09       	sbc	r19, r1
     c18:	2b 3f       	cpi	r18, 0xFB	; 251
     c1a:	31 05       	cpc	r19, r1
     c1c:	38 f4       	brcc	.+14     	; 0xc2c <main+0x160>
				OCR3B = 3000; // 빛이 많이 없는 경우
     c1e:	88 eb       	ldi	r24, 0xB8	; 184
     c20:	9b e0       	ldi	r25, 0x0B	; 11
     c22:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c26:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c2a:	14 c0       	rjmp	.+40     	; 0xc54 <main+0x188>
			}
			else if(cds_res >= 400 && cds_res <= 800){
     c2c:	9c 01       	movw	r18, r24
     c2e:	20 59       	subi	r18, 0x90	; 144
     c30:	31 40       	sbci	r19, 0x01	; 1
     c32:	21 39       	cpi	r18, 0x91	; 145
     c34:	31 40       	sbci	r19, 0x01	; 1
     c36:	38 f4       	brcc	.+14     	; 0xc46 <main+0x17a>
				OCR3B = 1500; // 오전
     c38:	8c ed       	ldi	r24, 0xDC	; 220
     c3a:	95 e0       	ldi	r25, 0x05	; 5
     c3c:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c40:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c44:	07 c0       	rjmp	.+14     	; 0xc54 <main+0x188>
			}
			else if(cds_res >= 800){ 
     c46:	80 32       	cpi	r24, 0x20	; 32
     c48:	93 40       	sbci	r25, 0x03	; 3
     c4a:	20 f0       	brcs	.+8      	; 0xc54 <main+0x188>
				OCR3B = 0; // 빛을 많이 감지한 경우
     c4c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c50:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
		
		
		//---------------------------Thermister----------------- dc모터
		// 센서의 analog output을 섭씨온도단위로 값을 변환
		// 온도가 올라가면서 PWM duty ratio를 상승시켜 모터의 속도를 증가 // OCR1A 사용 
		if(thermister_res <= 28) OCR1A = 0;
     c54:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <thermister_res>
     c58:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <thermister_res+0x1>
     c5c:	8d 31       	cpi	r24, 0x1D	; 29
     c5e:	91 05       	cpc	r25, r1
     c60:	18 f4       	brcc	.+6      	; 0xc68 <main+0x19c>
     c62:	1b bc       	out	0x2b, r1	; 43
     c64:	1a bc       	out	0x2a, r1	; 42
     c66:	4f c0       	rjmp	.+158    	; 0xd06 <main+0x23a>
		else if(thermister_res == 29) OCR1A = ICR1*(0.2);
     c68:	8d 31       	cpi	r24, 0x1D	; 29
     c6a:	91 05       	cpc	r25, r1
     c6c:	71 f4       	brne	.+28     	; 0xc8a <main+0x1be>
     c6e:	66 b5       	in	r22, 0x26	; 38
     c70:	77 b5       	in	r23, 0x27	; 39
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	5b d2       	rcall	.+1206   	; 0x112e <__floatunsisf>
     c78:	2d ec       	ldi	r18, 0xCD	; 205
     c7a:	3c ec       	ldi	r19, 0xCC	; 204
     c7c:	4c e4       	ldi	r20, 0x4C	; 76
     c7e:	5e e3       	ldi	r21, 0x3E	; 62
     c80:	2f d3       	rcall	.+1630   	; 0x12e0 <__mulsf3>
     c82:	29 d2       	rcall	.+1106   	; 0x10d6 <__fixunssfsi>
     c84:	7b bd       	out	0x2b, r23	; 43
     c86:	6a bd       	out	0x2a, r22	; 42
     c88:	3e c0       	rjmp	.+124    	; 0xd06 <main+0x23a>
		else if(thermister_res == 30) OCR1A = ICR1*(0.4);
     c8a:	8e 31       	cpi	r24, 0x1E	; 30
     c8c:	91 05       	cpc	r25, r1
     c8e:	71 f4       	brne	.+28     	; 0xcac <main+0x1e0>
     c90:	66 b5       	in	r22, 0x26	; 38
     c92:	77 b5       	in	r23, 0x27	; 39
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	4a d2       	rcall	.+1172   	; 0x112e <__floatunsisf>
     c9a:	2d ec       	ldi	r18, 0xCD	; 205
     c9c:	3c ec       	ldi	r19, 0xCC	; 204
     c9e:	4c ec       	ldi	r20, 0xCC	; 204
     ca0:	5e e3       	ldi	r21, 0x3E	; 62
     ca2:	1e d3       	rcall	.+1596   	; 0x12e0 <__mulsf3>
     ca4:	18 d2       	rcall	.+1072   	; 0x10d6 <__fixunssfsi>
     ca6:	7b bd       	out	0x2b, r23	; 43
     ca8:	6a bd       	out	0x2a, r22	; 42
     caa:	2d c0       	rjmp	.+90     	; 0xd06 <main+0x23a>
		else if(thermister_res == 31) OCR1A = ICR1*(0.6);
     cac:	8f 31       	cpi	r24, 0x1F	; 31
     cae:	91 05       	cpc	r25, r1
     cb0:	71 f4       	brne	.+28     	; 0xcce <main+0x202>
     cb2:	66 b5       	in	r22, 0x26	; 38
     cb4:	77 b5       	in	r23, 0x27	; 39
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	39 d2       	rcall	.+1138   	; 0x112e <__floatunsisf>
     cbc:	2a e9       	ldi	r18, 0x9A	; 154
     cbe:	39 e9       	ldi	r19, 0x99	; 153
     cc0:	49 e1       	ldi	r20, 0x19	; 25
     cc2:	5f e3       	ldi	r21, 0x3F	; 63
     cc4:	0d d3       	rcall	.+1562   	; 0x12e0 <__mulsf3>
     cc6:	07 d2       	rcall	.+1038   	; 0x10d6 <__fixunssfsi>
     cc8:	7b bd       	out	0x2b, r23	; 43
     cca:	6a bd       	out	0x2a, r22	; 42
     ccc:	1c c0       	rjmp	.+56     	; 0xd06 <main+0x23a>
		else if(thermister_res == 32) OCR1A = ICR1*(0.8);
     cce:	80 32       	cpi	r24, 0x20	; 32
     cd0:	91 05       	cpc	r25, r1
     cd2:	71 f4       	brne	.+28     	; 0xcf0 <main+0x224>
     cd4:	66 b5       	in	r22, 0x26	; 38
     cd6:	77 b5       	in	r23, 0x27	; 39
     cd8:	80 e0       	ldi	r24, 0x00	; 0
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	28 d2       	rcall	.+1104   	; 0x112e <__floatunsisf>
     cde:	2d ec       	ldi	r18, 0xCD	; 205
     ce0:	3c ec       	ldi	r19, 0xCC	; 204
     ce2:	4c e4       	ldi	r20, 0x4C	; 76
     ce4:	5f e3       	ldi	r21, 0x3F	; 63
     ce6:	fc d2       	rcall	.+1528   	; 0x12e0 <__mulsf3>
     ce8:	f6 d1       	rcall	.+1004   	; 0x10d6 <__fixunssfsi>
     cea:	7b bd       	out	0x2b, r23	; 43
     cec:	6a bd       	out	0x2a, r22	; 42
     cee:	0b c0       	rjmp	.+22     	; 0xd06 <main+0x23a>
     cf0:	81 97       	sbiw	r24, 0x21	; 33
		else if(thermister_res == 33) OCR1A = ICR1;
     cf2:	29 f4       	brne	.+10     	; 0xcfe <main+0x232>
     cf4:	86 b5       	in	r24, 0x26	; 38
     cf6:	97 b5       	in	r25, 0x27	; 39
     cf8:	9b bd       	out	0x2b, r25	; 43
     cfa:	8a bd       	out	0x2a, r24	; 42
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <main+0x23a>
     cfe:	86 b5       	in	r24, 0x26	; 38
		else OCR1A = ICR1;
     d00:	97 b5       	in	r25, 0x27	; 39
     d02:	9b bd       	out	0x2b, r25	; 43
     d04:	8a bd       	out	0x2a, r24	; 42
     d06:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <psd_res>
		
		
		//-------------------------PSD------------------------ 서보모터
		if(psd_res >= 25) angle = 110.0;
     d0a:	90 91 ff 02 	lds	r25, 0x02FF	; 0x8002ff <psd_res+0x1>
     d0e:	89 31       	cpi	r24, 0x19	; 25
     d10:	91 05       	cpc	r25, r1
     d12:	68 f0       	brcs	.+26     	; 0xd2e <main+0x262>
     d14:	80 e0       	ldi	r24, 0x00	; 0
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	ac ed       	ldi	r26, 0xDC	; 220
     d1a:	b2 e4       	ldi	r27, 0x42	; 66
     d1c:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <angle>
     d20:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <angle+0x1>
     d24:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <angle+0x2>
     d28:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <angle+0x3>
     d2c:	54 c0       	rjmp	.+168    	; 0xdd6 <main+0x30a>
     d2e:	9c 01       	movw	r18, r24
		else if(psd_res >= 20 && psd_res < 25) angle = 90.0;
     d30:	24 51       	subi	r18, 0x14	; 20
     d32:	31 09       	sbc	r19, r1
     d34:	25 30       	cpi	r18, 0x05	; 5
     d36:	31 05       	cpc	r19, r1
     d38:	68 f4       	brcc	.+26     	; 0xd54 <main+0x288>
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	a4 eb       	ldi	r26, 0xB4	; 180
     d40:	b2 e4       	ldi	r27, 0x42	; 66
     d42:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <angle>
     d46:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <angle+0x1>
     d4a:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <angle+0x2>
     d4e:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <angle+0x3>
     d52:	41 c0       	rjmp	.+130    	; 0xdd6 <main+0x30a>
     d54:	9c 01       	movw	r18, r24
		else if(psd_res >= 15 && psd_res < 20) angle = 60.0;
     d56:	2f 50       	subi	r18, 0x0F	; 15
     d58:	31 09       	sbc	r19, r1
     d5a:	25 30       	cpi	r18, 0x05	; 5
     d5c:	31 05       	cpc	r19, r1
     d5e:	68 f4       	brcc	.+26     	; 0xd7a <main+0x2ae>
     d60:	80 e0       	ldi	r24, 0x00	; 0
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	a0 e7       	ldi	r26, 0x70	; 112
     d66:	b2 e4       	ldi	r27, 0x42	; 66
     d68:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <angle>
     d6c:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <angle+0x1>
     d70:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <angle+0x2>
     d74:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <angle+0x3>
     d78:	2e c0       	rjmp	.+92     	; 0xdd6 <main+0x30a>
     d7a:	9c 01       	movw	r18, r24
		else if(psd_res >= 11 && psd_res < 15) angle = 30.0;
     d7c:	2b 50       	subi	r18, 0x0B	; 11
     d7e:	31 09       	sbc	r19, r1
     d80:	24 30       	cpi	r18, 0x04	; 4
     d82:	31 05       	cpc	r19, r1
     d84:	68 f4       	brcc	.+26     	; 0xda0 <main+0x2d4>
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	a0 ef       	ldi	r26, 0xF0	; 240
     d8c:	b1 e4       	ldi	r27, 0x41	; 65
     d8e:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <angle>
     d92:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <angle+0x1>
     d96:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <angle+0x2>
     d9a:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <angle+0x3>
     d9e:	1b c0       	rjmp	.+54     	; 0xdd6 <main+0x30a>
     da0:	0b 97       	sbiw	r24, 0x0b	; 11
		else if(psd_res < 11) angle = 10.0;
     da2:	68 f4       	brcc	.+26     	; 0xdbe <main+0x2f2>
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	a0 e2       	ldi	r26, 0x20	; 32
     daa:	b1 e4       	ldi	r27, 0x41	; 65
     dac:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <angle>
     db0:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <angle+0x1>
     db4:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <angle+0x2>
     db8:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <angle+0x3>
     dbc:	0c c0       	rjmp	.+24     	; 0xdd6 <main+0x30a>
     dbe:	80 e0       	ldi	r24, 0x00	; 0
		else angle = -10.0;
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	a0 e2       	ldi	r26, 0x20	; 32
     dc4:	b1 ec       	ldi	r27, 0xC1	; 193
     dc6:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <angle>
     dca:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <angle+0x1>
     dce:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <angle+0x2>
     dd2:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <angle+0x3>
		//set_servo 함수 안에서 OCR3C 사용
		set_servo(angle);
     dd6:	60 91 06 03 	lds	r22, 0x0306	; 0x800306 <angle>
     dda:	70 91 07 03 	lds	r23, 0x0307	; 0x800307 <angle+0x1>
     dde:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <angle+0x2>
     de2:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <angle+0x3>
     de6:	f8 dc       	rcall	.-1552   	; 0x7d8 <_Z9set_servod>
     de8:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <sound_res>
		
		
		//---------------------Sound Sensor---------------------- 수동형 부저 모듈
		// 센서의 Analog Output을 dB단위로 값을 변환
		// 온도가 올라가면서 OCR0의 값을 증가시키면서 부저모듈의 PWM 증가 ( 소리 커짐 ) // OCR1B 사용
		if(sound_res <= 100) {
     dec:	90 91 fd 02 	lds	r25, 0x02FD	; 0x8002fd <sound_res+0x1>
     df0:	85 36       	cpi	r24, 0x65	; 101
     df2:	91 05       	cpc	r25, r1
     df4:	50 f4       	brcc	.+20     	; 0xe0a <main+0x33e>
     df6:	8d ed       	ldi	r24, 0xDD	; 221
			 ICR1 = 7645;		//1옥타브 도
     df8:	9d e1       	ldi	r25, 0x1D	; 29
     dfa:	97 bd       	out	0x27, r25	; 39
     dfc:	86 bd       	out	0x26, r24	; 38
     dfe:	86 b5       	in	r24, 0x26	; 38
			 OCR1B = ICR1-1;	// duty 100% 소리 안남
     e00:	97 b5       	in	r25, 0x27	; 39
     e02:	01 97       	sbiw	r24, 0x01	; 1
     e04:	99 bd       	out	0x29, r25	; 41
     e06:	88 bd       	out	0x28, r24	; 40
     e08:	5e c0       	rjmp	.+188    	; 0xec6 <main+0x3fa>
     e0a:	9c 01       	movw	r18, r24
		}
		else if(sound_res > 100 && sound_res <= 150) {
     e0c:	25 56       	subi	r18, 0x65	; 101
     e0e:	31 09       	sbc	r19, r1
     e10:	22 33       	cpi	r18, 0x32	; 50
     e12:	31 05       	cpc	r19, r1
     e14:	58 f4       	brcc	.+22     	; 0xe2c <main+0x360>
     e16:	8e ee       	ldi	r24, 0xEE	; 238
			ICR1 = 3822;	//2옥타브 도
     e18:	9e e0       	ldi	r25, 0x0E	; 14
     e1a:	97 bd       	out	0x27, r25	; 39
     e1c:	86 bd       	out	0x26, r24	; 38
     e1e:	86 b5       	in	r24, 0x26	; 38
			OCR1B = ICR1/2;
     e20:	97 b5       	in	r25, 0x27	; 39
     e22:	96 95       	lsr	r25
     e24:	87 95       	ror	r24
     e26:	99 bd       	out	0x29, r25	; 41
     e28:	88 bd       	out	0x28, r24	; 40
     e2a:	4d c0       	rjmp	.+154    	; 0xec6 <main+0x3fa>
     e2c:	9c 01       	movw	r18, r24
		}
		else if(sound_res > 150 && sound_res <= 200) {
     e2e:	27 59       	subi	r18, 0x97	; 151
     e30:	31 09       	sbc	r19, r1
     e32:	22 33       	cpi	r18, 0x32	; 50
     e34:	31 05       	cpc	r19, r1
     e36:	58 f4       	brcc	.+22     	; 0xe4e <main+0x382>
     e38:	87 e7       	ldi	r24, 0x77	; 119
			ICR1 = 1911;	//3옥타브 도
     e3a:	97 e0       	ldi	r25, 0x07	; 7
     e3c:	97 bd       	out	0x27, r25	; 39
     e3e:	86 bd       	out	0x26, r24	; 38
     e40:	86 b5       	in	r24, 0x26	; 38
			OCR1B = ICR1/2;
     e42:	97 b5       	in	r25, 0x27	; 39
     e44:	96 95       	lsr	r25
     e46:	87 95       	ror	r24
     e48:	99 bd       	out	0x29, r25	; 41
     e4a:	88 bd       	out	0x28, r24	; 40
     e4c:	3c c0       	rjmp	.+120    	; 0xec6 <main+0x3fa>
     e4e:	9c 01       	movw	r18, r24
		}
		else if(sound_res > 200 && sound_res <= 250) 
     e50:	29 5c       	subi	r18, 0xC9	; 201
     e52:	31 09       	sbc	r19, r1
     e54:	22 33       	cpi	r18, 0x32	; 50
     e56:	31 05       	cpc	r19, r1
     e58:	58 f4       	brcc	.+22     	; 0xe70 <main+0x3a4>
     e5a:	8b eb       	ldi	r24, 0xBB	; 187
		{
			ICR1 = 955;	//4옥타브 도
     e5c:	93 e0       	ldi	r25, 0x03	; 3
     e5e:	97 bd       	out	0x27, r25	; 39
     e60:	86 bd       	out	0x26, r24	; 38
     e62:	86 b5       	in	r24, 0x26	; 38
			OCR1B = ICR1/2;
     e64:	97 b5       	in	r25, 0x27	; 39
     e66:	96 95       	lsr	r25
     e68:	87 95       	ror	r24
     e6a:	99 bd       	out	0x29, r25	; 41
     e6c:	88 bd       	out	0x28, r24	; 40
     e6e:	2b c0       	rjmp	.+86     	; 0xec6 <main+0x3fa>
     e70:	9c 01       	movw	r18, r24
		}
		else if(sound_res > 250 && sound_res <= 300) {
     e72:	2b 5f       	subi	r18, 0xFB	; 251
     e74:	31 09       	sbc	r19, r1
     e76:	22 33       	cpi	r18, 0x32	; 50
     e78:	31 05       	cpc	r19, r1
     e7a:	58 f4       	brcc	.+22     	; 0xe92 <main+0x3c6>
     e7c:	8d ed       	ldi	r24, 0xDD	; 221
			ICR1 = 477;	//5옥타브 도
     e7e:	91 e0       	ldi	r25, 0x01	; 1
     e80:	97 bd       	out	0x27, r25	; 39
     e82:	86 bd       	out	0x26, r24	; 38
     e84:	86 b5       	in	r24, 0x26	; 38
			OCR1B = ICR1/2;
     e86:	97 b5       	in	r25, 0x27	; 39
     e88:	96 95       	lsr	r25
     e8a:	87 95       	ror	r24
     e8c:	99 bd       	out	0x29, r25	; 41
     e8e:	88 bd       	out	0x28, r24	; 40
     e90:	1a c0       	rjmp	.+52     	; 0xec6 <main+0x3fa>
     e92:	8d 52       	subi	r24, 0x2D	; 45
		}
		else if(sound_res > 300 && sound_res <= 500) {
     e94:	91 40       	sbci	r25, 0x01	; 1
     e96:	88 3c       	cpi	r24, 0xC8	; 200
     e98:	91 05       	cpc	r25, r1
     e9a:	58 f4       	brcc	.+22     	; 0xeb2 <main+0x3e6>
     e9c:	8e ee       	ldi	r24, 0xEE	; 238
			ICR1 = 238;	//6옥타브 도
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	97 bd       	out	0x27, r25	; 39
     ea2:	86 bd       	out	0x26, r24	; 38
     ea4:	86 b5       	in	r24, 0x26	; 38
			OCR1B = ICR1/2;
     ea6:	97 b5       	in	r25, 0x27	; 39
     ea8:	96 95       	lsr	r25
     eaa:	87 95       	ror	r24
     eac:	99 bd       	out	0x29, r25	; 41
     eae:	88 bd       	out	0x28, r24	; 40
     eb0:	0a c0       	rjmp	.+20     	; 0xec6 <main+0x3fa>
     eb2:	8e ee       	ldi	r24, 0xEE	; 238
		}
		else 
		{
			ICR1 =238;
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	97 bd       	out	0x27, r25	; 39
     eb8:	86 bd       	out	0x26, r24	; 38
     eba:	86 b5       	in	r24, 0x26	; 38
			OCR1B = ICR1/2;
     ebc:	97 b5       	in	r25, 0x27	; 39
     ebe:	96 95       	lsr	r25
     ec0:	87 95       	ror	r24
     ec2:	99 bd       	out	0x29, r25	; 41
     ec4:	88 bd       	out	0x28, r24	; 40
     ec6:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <water_res>
		}
		
		//---------------------Water Sensor------------------- 진동 모터 모듈 
		// 센서의 Analog Output을 adc값으로 받아옴	//OCR0 사용
		// 물이 없을 때 1023 물을 가장많이 인식했을 때 200초반대
		if(water_res >= 900) OCR0 = 0;
     eca:	90 91 fb 02 	lds	r25, 0x02FB	; 0x8002fb <water_res+0x1>
     ece:	84 38       	cpi	r24, 0x84	; 132
     ed0:	43 e0       	ldi	r20, 0x03	; 3
     ed2:	94 07       	cpc	r25, r20
     ed4:	10 f0       	brcs	.+4      	; 0xeda <main+0x40e>
     ed6:	11 be       	out	0x31, r1	; 49
     ed8:	31 ce       	rjmp	.-926    	; 0xb3c <main+0x70>
     eda:	9c 01       	movw	r18, r24
		else if(water_res < 900 && water_res >= 600) OCR0 = 50;
     edc:	28 55       	subi	r18, 0x58	; 88
     ede:	32 40       	sbci	r19, 0x02	; 2
     ee0:	2c 32       	cpi	r18, 0x2C	; 44
     ee2:	31 40       	sbci	r19, 0x01	; 1
     ee4:	18 f4       	brcc	.+6      	; 0xeec <main+0x420>
     ee6:	82 e3       	ldi	r24, 0x32	; 50
     ee8:	81 bf       	out	0x31, r24	; 49
     eea:	28 ce       	rjmp	.-944    	; 0xb3c <main+0x70>
     eec:	9c 01       	movw	r18, r24
		else if(water_res < 600 && water_res >= 400) OCR0 = 150;
     eee:	20 59       	subi	r18, 0x90	; 144
     ef0:	31 40       	sbci	r19, 0x01	; 1
     ef2:	28 3c       	cpi	r18, 0xC8	; 200
     ef4:	31 05       	cpc	r19, r1
     ef6:	18 f4       	brcc	.+6      	; 0xefe <main+0x432>
     ef8:	86 e9       	ldi	r24, 0x96	; 150
     efa:	81 bf       	out	0x31, r24	; 49
     efc:	1f ce       	rjmp	.-962    	; 0xb3c <main+0x70>
     efe:	9c 01       	movw	r18, r24
		else if(water_res < 400 && water_res >= 300) OCR0 = 200;
     f00:	2c 52       	subi	r18, 0x2C	; 44
     f02:	31 40       	sbci	r19, 0x01	; 1
     f04:	24 36       	cpi	r18, 0x64	; 100
     f06:	31 05       	cpc	r19, r1
     f08:	18 f4       	brcc	.+6      	; 0xf10 <main+0x444>
     f0a:	88 ec       	ldi	r24, 0xC8	; 200
     f0c:	81 bf       	out	0x31, r24	; 49
     f0e:	16 ce       	rjmp	.-980    	; 0xb3c <main+0x70>
     f10:	84 56       	subi	r24, 0x64	; 100
		else if(water_res < 300 && water_res >= 100) OCR0 = 255;
     f12:	91 09       	sbc	r25, r1
     f14:	88 3c       	cpi	r24, 0xC8	; 200
     f16:	91 05       	cpc	r25, r1
     f18:	18 f4       	brcc	.+6      	; 0xf20 <main+0x454>
     f1a:	8f ef       	ldi	r24, 0xFF	; 255
     f1c:	81 bf       	out	0x31, r24	; 49
     f1e:	0e ce       	rjmp	.-996    	; 0xb3c <main+0x70>
     f20:	8f ef       	ldi	r24, 0xFF	; 255
		else OCR0 = 255;		
     f22:	81 bf       	out	0x31, r24	; 49
     f24:	0b ce       	rjmp	.-1002   	; 0xb3c <main+0x70>

00000f26 <_GLOBAL__sub_I_g_cnt>:
     f26:	6f ef       	ldi	r22, 0xFF	; 255
	}
}
     f28:	7f ef       	ldi	r23, 0xFF	; 255
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	1a c9       	rjmp	.-3532   	; 0x164 <_Z41__static_initialization_and_destruction_0ii>
     f30:	08 95       	ret

00000f32 <__subsf3>:
     f32:	50 58       	subi	r21, 0x80	; 128

00000f34 <__addsf3>:
     f34:	bb 27       	eor	r27, r27
     f36:	aa 27       	eor	r26, r26
     f38:	0e d0       	rcall	.+28     	; 0xf56 <__addsf3x>
     f3a:	4d c1       	rjmp	.+666    	; 0x11d6 <__fp_round>
     f3c:	3e d1       	rcall	.+636    	; 0x11ba <__fp_pscA>
     f3e:	30 f0       	brcs	.+12     	; 0xf4c <__addsf3+0x18>
     f40:	43 d1       	rcall	.+646    	; 0x11c8 <__fp_pscB>
     f42:	20 f0       	brcs	.+8      	; 0xf4c <__addsf3+0x18>
     f44:	31 f4       	brne	.+12     	; 0xf52 <__addsf3+0x1e>
     f46:	9f 3f       	cpi	r25, 0xFF	; 255
     f48:	11 f4       	brne	.+4      	; 0xf4e <__addsf3+0x1a>
     f4a:	1e f4       	brtc	.+6      	; 0xf52 <__addsf3+0x1e>
     f4c:	33 c1       	rjmp	.+614    	; 0x11b4 <__fp_nan>
     f4e:	0e f4       	brtc	.+2      	; 0xf52 <__addsf3+0x1e>
     f50:	e0 95       	com	r30
     f52:	e7 fb       	bst	r30, 7
     f54:	29 c1       	rjmp	.+594    	; 0x11a8 <__fp_inf>

00000f56 <__addsf3x>:
     f56:	e9 2f       	mov	r30, r25
     f58:	4f d1       	rcall	.+670    	; 0x11f8 <__fp_split3>
     f5a:	80 f3       	brcs	.-32     	; 0xf3c <__addsf3+0x8>
     f5c:	ba 17       	cp	r27, r26
     f5e:	62 07       	cpc	r22, r18
     f60:	73 07       	cpc	r23, r19
     f62:	84 07       	cpc	r24, r20
     f64:	95 07       	cpc	r25, r21
     f66:	18 f0       	brcs	.+6      	; 0xf6e <__addsf3x+0x18>
     f68:	71 f4       	brne	.+28     	; 0xf86 <__addsf3x+0x30>
     f6a:	9e f5       	brtc	.+102    	; 0xfd2 <__addsf3x+0x7c>
     f6c:	67 c1       	rjmp	.+718    	; 0x123c <__fp_zero>
     f6e:	0e f4       	brtc	.+2      	; 0xf72 <__addsf3x+0x1c>
     f70:	e0 95       	com	r30
     f72:	0b 2e       	mov	r0, r27
     f74:	ba 2f       	mov	r27, r26
     f76:	a0 2d       	mov	r26, r0
     f78:	0b 01       	movw	r0, r22
     f7a:	b9 01       	movw	r22, r18
     f7c:	90 01       	movw	r18, r0
     f7e:	0c 01       	movw	r0, r24
     f80:	ca 01       	movw	r24, r20
     f82:	a0 01       	movw	r20, r0
     f84:	11 24       	eor	r1, r1
     f86:	ff 27       	eor	r31, r31
     f88:	59 1b       	sub	r21, r25
     f8a:	99 f0       	breq	.+38     	; 0xfb2 <__addsf3x+0x5c>
     f8c:	59 3f       	cpi	r21, 0xF9	; 249
     f8e:	50 f4       	brcc	.+20     	; 0xfa4 <__addsf3x+0x4e>
     f90:	50 3e       	cpi	r21, 0xE0	; 224
     f92:	68 f1       	brcs	.+90     	; 0xfee <__addsf3x+0x98>
     f94:	1a 16       	cp	r1, r26
     f96:	f0 40       	sbci	r31, 0x00	; 0
     f98:	a2 2f       	mov	r26, r18
     f9a:	23 2f       	mov	r18, r19
     f9c:	34 2f       	mov	r19, r20
     f9e:	44 27       	eor	r20, r20
     fa0:	58 5f       	subi	r21, 0xF8	; 248
     fa2:	f3 cf       	rjmp	.-26     	; 0xf8a <__addsf3x+0x34>
     fa4:	46 95       	lsr	r20
     fa6:	37 95       	ror	r19
     fa8:	27 95       	ror	r18
     faa:	a7 95       	ror	r26
     fac:	f0 40       	sbci	r31, 0x00	; 0
     fae:	53 95       	inc	r21
     fb0:	c9 f7       	brne	.-14     	; 0xfa4 <__addsf3x+0x4e>
     fb2:	7e f4       	brtc	.+30     	; 0xfd2 <__addsf3x+0x7c>
     fb4:	1f 16       	cp	r1, r31
     fb6:	ba 0b       	sbc	r27, r26
     fb8:	62 0b       	sbc	r22, r18
     fba:	73 0b       	sbc	r23, r19
     fbc:	84 0b       	sbc	r24, r20
     fbe:	ba f0       	brmi	.+46     	; 0xfee <__addsf3x+0x98>
     fc0:	91 50       	subi	r25, 0x01	; 1
     fc2:	a1 f0       	breq	.+40     	; 0xfec <__addsf3x+0x96>
     fc4:	ff 0f       	add	r31, r31
     fc6:	bb 1f       	adc	r27, r27
     fc8:	66 1f       	adc	r22, r22
     fca:	77 1f       	adc	r23, r23
     fcc:	88 1f       	adc	r24, r24
     fce:	c2 f7       	brpl	.-16     	; 0xfc0 <__addsf3x+0x6a>
     fd0:	0e c0       	rjmp	.+28     	; 0xfee <__addsf3x+0x98>
     fd2:	ba 0f       	add	r27, r26
     fd4:	62 1f       	adc	r22, r18
     fd6:	73 1f       	adc	r23, r19
     fd8:	84 1f       	adc	r24, r20
     fda:	48 f4       	brcc	.+18     	; 0xfee <__addsf3x+0x98>
     fdc:	87 95       	ror	r24
     fde:	77 95       	ror	r23
     fe0:	67 95       	ror	r22
     fe2:	b7 95       	ror	r27
     fe4:	f7 95       	ror	r31
     fe6:	9e 3f       	cpi	r25, 0xFE	; 254
     fe8:	08 f0       	brcs	.+2      	; 0xfec <__addsf3x+0x96>
     fea:	b3 cf       	rjmp	.-154    	; 0xf52 <__addsf3+0x1e>
     fec:	93 95       	inc	r25
     fee:	88 0f       	add	r24, r24
     ff0:	08 f0       	brcs	.+2      	; 0xff4 <__addsf3x+0x9e>
     ff2:	99 27       	eor	r25, r25
     ff4:	ee 0f       	add	r30, r30
     ff6:	97 95       	ror	r25
     ff8:	87 95       	ror	r24
     ffa:	08 95       	ret

00000ffc <__divsf3>:
     ffc:	0c d0       	rcall	.+24     	; 0x1016 <__divsf3x>
     ffe:	eb c0       	rjmp	.+470    	; 0x11d6 <__fp_round>
    1000:	e3 d0       	rcall	.+454    	; 0x11c8 <__fp_pscB>
    1002:	40 f0       	brcs	.+16     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
    1004:	da d0       	rcall	.+436    	; 0x11ba <__fp_pscA>
    1006:	30 f0       	brcs	.+12     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
    1008:	21 f4       	brne	.+8      	; 0x1012 <__DATA_REGION_LENGTH__+0x12>
    100a:	5f 3f       	cpi	r21, 0xFF	; 255
    100c:	19 f0       	breq	.+6      	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
    100e:	cc c0       	rjmp	.+408    	; 0x11a8 <__fp_inf>
    1010:	51 11       	cpse	r21, r1
    1012:	15 c1       	rjmp	.+554    	; 0x123e <__fp_szero>
    1014:	cf c0       	rjmp	.+414    	; 0x11b4 <__fp_nan>

00001016 <__divsf3x>:
    1016:	f0 d0       	rcall	.+480    	; 0x11f8 <__fp_split3>
    1018:	98 f3       	brcs	.-26     	; 0x1000 <__DATA_REGION_LENGTH__>

0000101a <__divsf3_pse>:
    101a:	99 23       	and	r25, r25
    101c:	c9 f3       	breq	.-14     	; 0x1010 <__DATA_REGION_LENGTH__+0x10>
    101e:	55 23       	and	r21, r21
    1020:	b1 f3       	breq	.-20     	; 0x100e <__DATA_REGION_LENGTH__+0xe>
    1022:	95 1b       	sub	r25, r21
    1024:	55 0b       	sbc	r21, r21
    1026:	bb 27       	eor	r27, r27
    1028:	aa 27       	eor	r26, r26
    102a:	62 17       	cp	r22, r18
    102c:	73 07       	cpc	r23, r19
    102e:	84 07       	cpc	r24, r20
    1030:	38 f0       	brcs	.+14     	; 0x1040 <__divsf3_pse+0x26>
    1032:	9f 5f       	subi	r25, 0xFF	; 255
    1034:	5f 4f       	sbci	r21, 0xFF	; 255
    1036:	22 0f       	add	r18, r18
    1038:	33 1f       	adc	r19, r19
    103a:	44 1f       	adc	r20, r20
    103c:	aa 1f       	adc	r26, r26
    103e:	a9 f3       	breq	.-22     	; 0x102a <__divsf3_pse+0x10>
    1040:	33 d0       	rcall	.+102    	; 0x10a8 <__divsf3_pse+0x8e>
    1042:	0e 2e       	mov	r0, r30
    1044:	3a f0       	brmi	.+14     	; 0x1054 <__divsf3_pse+0x3a>
    1046:	e0 e8       	ldi	r30, 0x80	; 128
    1048:	30 d0       	rcall	.+96     	; 0x10aa <__divsf3_pse+0x90>
    104a:	91 50       	subi	r25, 0x01	; 1
    104c:	50 40       	sbci	r21, 0x00	; 0
    104e:	e6 95       	lsr	r30
    1050:	00 1c       	adc	r0, r0
    1052:	ca f7       	brpl	.-14     	; 0x1046 <__divsf3_pse+0x2c>
    1054:	29 d0       	rcall	.+82     	; 0x10a8 <__divsf3_pse+0x8e>
    1056:	fe 2f       	mov	r31, r30
    1058:	27 d0       	rcall	.+78     	; 0x10a8 <__divsf3_pse+0x8e>
    105a:	66 0f       	add	r22, r22
    105c:	77 1f       	adc	r23, r23
    105e:	88 1f       	adc	r24, r24
    1060:	bb 1f       	adc	r27, r27
    1062:	26 17       	cp	r18, r22
    1064:	37 07       	cpc	r19, r23
    1066:	48 07       	cpc	r20, r24
    1068:	ab 07       	cpc	r26, r27
    106a:	b0 e8       	ldi	r27, 0x80	; 128
    106c:	09 f0       	breq	.+2      	; 0x1070 <__divsf3_pse+0x56>
    106e:	bb 0b       	sbc	r27, r27
    1070:	80 2d       	mov	r24, r0
    1072:	bf 01       	movw	r22, r30
    1074:	ff 27       	eor	r31, r31
    1076:	93 58       	subi	r25, 0x83	; 131
    1078:	5f 4f       	sbci	r21, 0xFF	; 255
    107a:	2a f0       	brmi	.+10     	; 0x1086 <__divsf3_pse+0x6c>
    107c:	9e 3f       	cpi	r25, 0xFE	; 254
    107e:	51 05       	cpc	r21, r1
    1080:	68 f0       	brcs	.+26     	; 0x109c <__divsf3_pse+0x82>
    1082:	92 c0       	rjmp	.+292    	; 0x11a8 <__fp_inf>
    1084:	dc c0       	rjmp	.+440    	; 0x123e <__fp_szero>
    1086:	5f 3f       	cpi	r21, 0xFF	; 255
    1088:	ec f3       	brlt	.-6      	; 0x1084 <__divsf3_pse+0x6a>
    108a:	98 3e       	cpi	r25, 0xE8	; 232
    108c:	dc f3       	brlt	.-10     	; 0x1084 <__divsf3_pse+0x6a>
    108e:	86 95       	lsr	r24
    1090:	77 95       	ror	r23
    1092:	67 95       	ror	r22
    1094:	b7 95       	ror	r27
    1096:	f7 95       	ror	r31
    1098:	9f 5f       	subi	r25, 0xFF	; 255
    109a:	c9 f7       	brne	.-14     	; 0x108e <__divsf3_pse+0x74>
    109c:	88 0f       	add	r24, r24
    109e:	91 1d       	adc	r25, r1
    10a0:	96 95       	lsr	r25
    10a2:	87 95       	ror	r24
    10a4:	97 f9       	bld	r25, 7
    10a6:	08 95       	ret
    10a8:	e1 e0       	ldi	r30, 0x01	; 1
    10aa:	66 0f       	add	r22, r22
    10ac:	77 1f       	adc	r23, r23
    10ae:	88 1f       	adc	r24, r24
    10b0:	bb 1f       	adc	r27, r27
    10b2:	62 17       	cp	r22, r18
    10b4:	73 07       	cpc	r23, r19
    10b6:	84 07       	cpc	r24, r20
    10b8:	ba 07       	cpc	r27, r26
    10ba:	20 f0       	brcs	.+8      	; 0x10c4 <__divsf3_pse+0xaa>
    10bc:	62 1b       	sub	r22, r18
    10be:	73 0b       	sbc	r23, r19
    10c0:	84 0b       	sbc	r24, r20
    10c2:	ba 0b       	sbc	r27, r26
    10c4:	ee 1f       	adc	r30, r30
    10c6:	88 f7       	brcc	.-30     	; 0x10aa <__divsf3_pse+0x90>
    10c8:	e0 95       	com	r30
    10ca:	08 95       	ret

000010cc <__fixsfsi>:
    10cc:	04 d0       	rcall	.+8      	; 0x10d6 <__fixunssfsi>
    10ce:	68 94       	set
    10d0:	b1 11       	cpse	r27, r1
    10d2:	b5 c0       	rjmp	.+362    	; 0x123e <__fp_szero>
    10d4:	08 95       	ret

000010d6 <__fixunssfsi>:
    10d6:	98 d0       	rcall	.+304    	; 0x1208 <__fp_splitA>
    10d8:	88 f0       	brcs	.+34     	; 0x10fc <__fixunssfsi+0x26>
    10da:	9f 57       	subi	r25, 0x7F	; 127
    10dc:	90 f0       	brcs	.+36     	; 0x1102 <__stack+0x3>
    10de:	b9 2f       	mov	r27, r25
    10e0:	99 27       	eor	r25, r25
    10e2:	b7 51       	subi	r27, 0x17	; 23
    10e4:	a0 f0       	brcs	.+40     	; 0x110e <__stack+0xf>
    10e6:	d1 f0       	breq	.+52     	; 0x111c <__stack+0x1d>
    10e8:	66 0f       	add	r22, r22
    10ea:	77 1f       	adc	r23, r23
    10ec:	88 1f       	adc	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	1a f0       	brmi	.+6      	; 0x10f8 <__fixunssfsi+0x22>
    10f2:	ba 95       	dec	r27
    10f4:	c9 f7       	brne	.-14     	; 0x10e8 <__fixunssfsi+0x12>
    10f6:	12 c0       	rjmp	.+36     	; 0x111c <__stack+0x1d>
    10f8:	b1 30       	cpi	r27, 0x01	; 1
    10fa:	81 f0       	breq	.+32     	; 0x111c <__stack+0x1d>
    10fc:	9f d0       	rcall	.+318    	; 0x123c <__fp_zero>
    10fe:	b1 e0       	ldi	r27, 0x01	; 1
    1100:	08 95       	ret
    1102:	9c c0       	rjmp	.+312    	; 0x123c <__fp_zero>
    1104:	67 2f       	mov	r22, r23
    1106:	78 2f       	mov	r23, r24
    1108:	88 27       	eor	r24, r24
    110a:	b8 5f       	subi	r27, 0xF8	; 248
    110c:	39 f0       	breq	.+14     	; 0x111c <__stack+0x1d>
    110e:	b9 3f       	cpi	r27, 0xF9	; 249
    1110:	cc f3       	brlt	.-14     	; 0x1104 <__stack+0x5>
    1112:	86 95       	lsr	r24
    1114:	77 95       	ror	r23
    1116:	67 95       	ror	r22
    1118:	b3 95       	inc	r27
    111a:	d9 f7       	brne	.-10     	; 0x1112 <__stack+0x13>
    111c:	3e f4       	brtc	.+14     	; 0x112c <__stack+0x2d>
    111e:	90 95       	com	r25
    1120:	80 95       	com	r24
    1122:	70 95       	com	r23
    1124:	61 95       	neg	r22
    1126:	7f 4f       	sbci	r23, 0xFF	; 255
    1128:	8f 4f       	sbci	r24, 0xFF	; 255
    112a:	9f 4f       	sbci	r25, 0xFF	; 255
    112c:	08 95       	ret

0000112e <__floatunsisf>:
    112e:	e8 94       	clt
    1130:	09 c0       	rjmp	.+18     	; 0x1144 <__floatsisf+0x12>

00001132 <__floatsisf>:
    1132:	97 fb       	bst	r25, 7
    1134:	3e f4       	brtc	.+14     	; 0x1144 <__floatsisf+0x12>
    1136:	90 95       	com	r25
    1138:	80 95       	com	r24
    113a:	70 95       	com	r23
    113c:	61 95       	neg	r22
    113e:	7f 4f       	sbci	r23, 0xFF	; 255
    1140:	8f 4f       	sbci	r24, 0xFF	; 255
    1142:	9f 4f       	sbci	r25, 0xFF	; 255
    1144:	99 23       	and	r25, r25
    1146:	a9 f0       	breq	.+42     	; 0x1172 <__floatsisf+0x40>
    1148:	f9 2f       	mov	r31, r25
    114a:	96 e9       	ldi	r25, 0x96	; 150
    114c:	bb 27       	eor	r27, r27
    114e:	93 95       	inc	r25
    1150:	f6 95       	lsr	r31
    1152:	87 95       	ror	r24
    1154:	77 95       	ror	r23
    1156:	67 95       	ror	r22
    1158:	b7 95       	ror	r27
    115a:	f1 11       	cpse	r31, r1
    115c:	f8 cf       	rjmp	.-16     	; 0x114e <__floatsisf+0x1c>
    115e:	fa f4       	brpl	.+62     	; 0x119e <__floatsisf+0x6c>
    1160:	bb 0f       	add	r27, r27
    1162:	11 f4       	brne	.+4      	; 0x1168 <__floatsisf+0x36>
    1164:	60 ff       	sbrs	r22, 0
    1166:	1b c0       	rjmp	.+54     	; 0x119e <__floatsisf+0x6c>
    1168:	6f 5f       	subi	r22, 0xFF	; 255
    116a:	7f 4f       	sbci	r23, 0xFF	; 255
    116c:	8f 4f       	sbci	r24, 0xFF	; 255
    116e:	9f 4f       	sbci	r25, 0xFF	; 255
    1170:	16 c0       	rjmp	.+44     	; 0x119e <__floatsisf+0x6c>
    1172:	88 23       	and	r24, r24
    1174:	11 f0       	breq	.+4      	; 0x117a <__floatsisf+0x48>
    1176:	96 e9       	ldi	r25, 0x96	; 150
    1178:	11 c0       	rjmp	.+34     	; 0x119c <__floatsisf+0x6a>
    117a:	77 23       	and	r23, r23
    117c:	21 f0       	breq	.+8      	; 0x1186 <__floatsisf+0x54>
    117e:	9e e8       	ldi	r25, 0x8E	; 142
    1180:	87 2f       	mov	r24, r23
    1182:	76 2f       	mov	r23, r22
    1184:	05 c0       	rjmp	.+10     	; 0x1190 <__floatsisf+0x5e>
    1186:	66 23       	and	r22, r22
    1188:	71 f0       	breq	.+28     	; 0x11a6 <__floatsisf+0x74>
    118a:	96 e8       	ldi	r25, 0x86	; 134
    118c:	86 2f       	mov	r24, r22
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	2a f0       	brmi	.+10     	; 0x119e <__floatsisf+0x6c>
    1194:	9a 95       	dec	r25
    1196:	66 0f       	add	r22, r22
    1198:	77 1f       	adc	r23, r23
    119a:	88 1f       	adc	r24, r24
    119c:	da f7       	brpl	.-10     	; 0x1194 <__floatsisf+0x62>
    119e:	88 0f       	add	r24, r24
    11a0:	96 95       	lsr	r25
    11a2:	87 95       	ror	r24
    11a4:	97 f9       	bld	r25, 7
    11a6:	08 95       	ret

000011a8 <__fp_inf>:
    11a8:	97 f9       	bld	r25, 7
    11aa:	9f 67       	ori	r25, 0x7F	; 127
    11ac:	80 e8       	ldi	r24, 0x80	; 128
    11ae:	70 e0       	ldi	r23, 0x00	; 0
    11b0:	60 e0       	ldi	r22, 0x00	; 0
    11b2:	08 95       	ret

000011b4 <__fp_nan>:
    11b4:	9f ef       	ldi	r25, 0xFF	; 255
    11b6:	80 ec       	ldi	r24, 0xC0	; 192
    11b8:	08 95       	ret

000011ba <__fp_pscA>:
    11ba:	00 24       	eor	r0, r0
    11bc:	0a 94       	dec	r0
    11be:	16 16       	cp	r1, r22
    11c0:	17 06       	cpc	r1, r23
    11c2:	18 06       	cpc	r1, r24
    11c4:	09 06       	cpc	r0, r25
    11c6:	08 95       	ret

000011c8 <__fp_pscB>:
    11c8:	00 24       	eor	r0, r0
    11ca:	0a 94       	dec	r0
    11cc:	12 16       	cp	r1, r18
    11ce:	13 06       	cpc	r1, r19
    11d0:	14 06       	cpc	r1, r20
    11d2:	05 06       	cpc	r0, r21
    11d4:	08 95       	ret

000011d6 <__fp_round>:
    11d6:	09 2e       	mov	r0, r25
    11d8:	03 94       	inc	r0
    11da:	00 0c       	add	r0, r0
    11dc:	11 f4       	brne	.+4      	; 0x11e2 <__fp_round+0xc>
    11de:	88 23       	and	r24, r24
    11e0:	52 f0       	brmi	.+20     	; 0x11f6 <__fp_round+0x20>
    11e2:	bb 0f       	add	r27, r27
    11e4:	40 f4       	brcc	.+16     	; 0x11f6 <__fp_round+0x20>
    11e6:	bf 2b       	or	r27, r31
    11e8:	11 f4       	brne	.+4      	; 0x11ee <__fp_round+0x18>
    11ea:	60 ff       	sbrs	r22, 0
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <__fp_round+0x20>
    11ee:	6f 5f       	subi	r22, 0xFF	; 255
    11f0:	7f 4f       	sbci	r23, 0xFF	; 255
    11f2:	8f 4f       	sbci	r24, 0xFF	; 255
    11f4:	9f 4f       	sbci	r25, 0xFF	; 255
    11f6:	08 95       	ret

000011f8 <__fp_split3>:
    11f8:	57 fd       	sbrc	r21, 7
    11fa:	90 58       	subi	r25, 0x80	; 128
    11fc:	44 0f       	add	r20, r20
    11fe:	55 1f       	adc	r21, r21
    1200:	59 f0       	breq	.+22     	; 0x1218 <__fp_splitA+0x10>
    1202:	5f 3f       	cpi	r21, 0xFF	; 255
    1204:	71 f0       	breq	.+28     	; 0x1222 <__fp_splitA+0x1a>
    1206:	47 95       	ror	r20

00001208 <__fp_splitA>:
    1208:	88 0f       	add	r24, r24
    120a:	97 fb       	bst	r25, 7
    120c:	99 1f       	adc	r25, r25
    120e:	61 f0       	breq	.+24     	; 0x1228 <__fp_splitA+0x20>
    1210:	9f 3f       	cpi	r25, 0xFF	; 255
    1212:	79 f0       	breq	.+30     	; 0x1232 <__fp_splitA+0x2a>
    1214:	87 95       	ror	r24
    1216:	08 95       	ret
    1218:	12 16       	cp	r1, r18
    121a:	13 06       	cpc	r1, r19
    121c:	14 06       	cpc	r1, r20
    121e:	55 1f       	adc	r21, r21
    1220:	f2 cf       	rjmp	.-28     	; 0x1206 <__fp_split3+0xe>
    1222:	46 95       	lsr	r20
    1224:	f1 df       	rcall	.-30     	; 0x1208 <__fp_splitA>
    1226:	08 c0       	rjmp	.+16     	; 0x1238 <__fp_splitA+0x30>
    1228:	16 16       	cp	r1, r22
    122a:	17 06       	cpc	r1, r23
    122c:	18 06       	cpc	r1, r24
    122e:	99 1f       	adc	r25, r25
    1230:	f1 cf       	rjmp	.-30     	; 0x1214 <__fp_splitA+0xc>
    1232:	86 95       	lsr	r24
    1234:	71 05       	cpc	r23, r1
    1236:	61 05       	cpc	r22, r1
    1238:	08 94       	sec
    123a:	08 95       	ret

0000123c <__fp_zero>:
    123c:	e8 94       	clt

0000123e <__fp_szero>:
    123e:	bb 27       	eor	r27, r27
    1240:	66 27       	eor	r22, r22
    1242:	77 27       	eor	r23, r23
    1244:	cb 01       	movw	r24, r22
    1246:	97 f9       	bld	r25, 7
    1248:	08 95       	ret

0000124a <log10>:
    124a:	0a d0       	rcall	.+20     	; 0x1260 <log>
    124c:	29 ed       	ldi	r18, 0xD9	; 217
    124e:	3b e5       	ldi	r19, 0x5B	; 91
    1250:	4e ed       	ldi	r20, 0xDE	; 222
    1252:	5e e3       	ldi	r21, 0x3E	; 62
    1254:	45 c0       	rjmp	.+138    	; 0x12e0 <__mulsf3>
    1256:	0e f0       	brts	.+2      	; 0x125a <log10+0x10>
    1258:	23 c1       	rjmp	.+582    	; 0x14a0 <__fp_mpack>
    125a:	ac cf       	rjmp	.-168    	; 0x11b4 <__fp_nan>
    125c:	68 94       	set
    125e:	a4 cf       	rjmp	.-184    	; 0x11a8 <__fp_inf>

00001260 <log>:
    1260:	d3 df       	rcall	.-90     	; 0x1208 <__fp_splitA>
    1262:	c8 f3       	brcs	.-14     	; 0x1256 <log10+0xc>
    1264:	99 23       	and	r25, r25
    1266:	d1 f3       	breq	.-12     	; 0x125c <log10+0x12>
    1268:	c6 f3       	brts	.-16     	; 0x125a <log10+0x10>
    126a:	df 93       	push	r29
    126c:	cf 93       	push	r28
    126e:	1f 93       	push	r17
    1270:	0f 93       	push	r16
    1272:	ff 92       	push	r15
    1274:	c9 2f       	mov	r28, r25
    1276:	dd 27       	eor	r29, r29
    1278:	88 23       	and	r24, r24
    127a:	2a f0       	brmi	.+10     	; 0x1286 <log+0x26>
    127c:	21 97       	sbiw	r28, 0x01	; 1
    127e:	66 0f       	add	r22, r22
    1280:	77 1f       	adc	r23, r23
    1282:	88 1f       	adc	r24, r24
    1284:	da f7       	brpl	.-10     	; 0x127c <log+0x1c>
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	30 e0       	ldi	r19, 0x00	; 0
    128a:	40 e8       	ldi	r20, 0x80	; 128
    128c:	5f eb       	ldi	r21, 0xBF	; 191
    128e:	9f e3       	ldi	r25, 0x3F	; 63
    1290:	88 39       	cpi	r24, 0x98	; 152
    1292:	20 f0       	brcs	.+8      	; 0x129c <log+0x3c>
    1294:	80 3e       	cpi	r24, 0xE0	; 224
    1296:	30 f0       	brcs	.+12     	; 0x12a4 <log+0x44>
    1298:	21 96       	adiw	r28, 0x01	; 1
    129a:	8f 77       	andi	r24, 0x7F	; 127
    129c:	4b de       	rcall	.-874    	; 0xf34 <__addsf3>
    129e:	ec e8       	ldi	r30, 0x8C	; 140
    12a0:	f0 e0       	ldi	r31, 0x00	; 0
    12a2:	03 c0       	rjmp	.+6      	; 0x12aa <log+0x4a>
    12a4:	47 de       	rcall	.-882    	; 0xf34 <__addsf3>
    12a6:	e9 eb       	ldi	r30, 0xB9	; 185
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	08 d1       	rcall	.+528    	; 0x14bc <__fp_powser>
    12ac:	8b 01       	movw	r16, r22
    12ae:	be 01       	movw	r22, r28
    12b0:	ec 01       	movw	r28, r24
    12b2:	fb 2e       	mov	r15, r27
    12b4:	6f 57       	subi	r22, 0x7F	; 127
    12b6:	71 09       	sbc	r23, r1
    12b8:	75 95       	asr	r23
    12ba:	77 1f       	adc	r23, r23
    12bc:	88 0b       	sbc	r24, r24
    12be:	99 0b       	sbc	r25, r25
    12c0:	38 df       	rcall	.-400    	; 0x1132 <__floatsisf>
    12c2:	28 e1       	ldi	r18, 0x18	; 24
    12c4:	32 e7       	ldi	r19, 0x72	; 114
    12c6:	41 e3       	ldi	r20, 0x31	; 49
    12c8:	5f e3       	ldi	r21, 0x3F	; 63
    12ca:	16 d0       	rcall	.+44     	; 0x12f8 <__mulsf3x>
    12cc:	af 2d       	mov	r26, r15
    12ce:	98 01       	movw	r18, r16
    12d0:	ae 01       	movw	r20, r28
    12d2:	ff 90       	pop	r15
    12d4:	0f 91       	pop	r16
    12d6:	1f 91       	pop	r17
    12d8:	cf 91       	pop	r28
    12da:	df 91       	pop	r29
    12dc:	3c de       	rcall	.-904    	; 0xf56 <__addsf3x>
    12de:	7b cf       	rjmp	.-266    	; 0x11d6 <__fp_round>

000012e0 <__mulsf3>:
    12e0:	0b d0       	rcall	.+22     	; 0x12f8 <__mulsf3x>
    12e2:	79 cf       	rjmp	.-270    	; 0x11d6 <__fp_round>
    12e4:	6a df       	rcall	.-300    	; 0x11ba <__fp_pscA>
    12e6:	28 f0       	brcs	.+10     	; 0x12f2 <__mulsf3+0x12>
    12e8:	6f df       	rcall	.-290    	; 0x11c8 <__fp_pscB>
    12ea:	18 f0       	brcs	.+6      	; 0x12f2 <__mulsf3+0x12>
    12ec:	95 23       	and	r25, r21
    12ee:	09 f0       	breq	.+2      	; 0x12f2 <__mulsf3+0x12>
    12f0:	5b cf       	rjmp	.-330    	; 0x11a8 <__fp_inf>
    12f2:	60 cf       	rjmp	.-320    	; 0x11b4 <__fp_nan>
    12f4:	11 24       	eor	r1, r1
    12f6:	a3 cf       	rjmp	.-186    	; 0x123e <__fp_szero>

000012f8 <__mulsf3x>:
    12f8:	7f df       	rcall	.-258    	; 0x11f8 <__fp_split3>
    12fa:	a0 f3       	brcs	.-24     	; 0x12e4 <__mulsf3+0x4>

000012fc <__mulsf3_pse>:
    12fc:	95 9f       	mul	r25, r21
    12fe:	d1 f3       	breq	.-12     	; 0x12f4 <__mulsf3+0x14>
    1300:	95 0f       	add	r25, r21
    1302:	50 e0       	ldi	r21, 0x00	; 0
    1304:	55 1f       	adc	r21, r21
    1306:	62 9f       	mul	r22, r18
    1308:	f0 01       	movw	r30, r0
    130a:	72 9f       	mul	r23, r18
    130c:	bb 27       	eor	r27, r27
    130e:	f0 0d       	add	r31, r0
    1310:	b1 1d       	adc	r27, r1
    1312:	63 9f       	mul	r22, r19
    1314:	aa 27       	eor	r26, r26
    1316:	f0 0d       	add	r31, r0
    1318:	b1 1d       	adc	r27, r1
    131a:	aa 1f       	adc	r26, r26
    131c:	64 9f       	mul	r22, r20
    131e:	66 27       	eor	r22, r22
    1320:	b0 0d       	add	r27, r0
    1322:	a1 1d       	adc	r26, r1
    1324:	66 1f       	adc	r22, r22
    1326:	82 9f       	mul	r24, r18
    1328:	22 27       	eor	r18, r18
    132a:	b0 0d       	add	r27, r0
    132c:	a1 1d       	adc	r26, r1
    132e:	62 1f       	adc	r22, r18
    1330:	73 9f       	mul	r23, r19
    1332:	b0 0d       	add	r27, r0
    1334:	a1 1d       	adc	r26, r1
    1336:	62 1f       	adc	r22, r18
    1338:	83 9f       	mul	r24, r19
    133a:	a0 0d       	add	r26, r0
    133c:	61 1d       	adc	r22, r1
    133e:	22 1f       	adc	r18, r18
    1340:	74 9f       	mul	r23, r20
    1342:	33 27       	eor	r19, r19
    1344:	a0 0d       	add	r26, r0
    1346:	61 1d       	adc	r22, r1
    1348:	23 1f       	adc	r18, r19
    134a:	84 9f       	mul	r24, r20
    134c:	60 0d       	add	r22, r0
    134e:	21 1d       	adc	r18, r1
    1350:	82 2f       	mov	r24, r18
    1352:	76 2f       	mov	r23, r22
    1354:	6a 2f       	mov	r22, r26
    1356:	11 24       	eor	r1, r1
    1358:	9f 57       	subi	r25, 0x7F	; 127
    135a:	50 40       	sbci	r21, 0x00	; 0
    135c:	8a f0       	brmi	.+34     	; 0x1380 <__mulsf3_pse+0x84>
    135e:	e1 f0       	breq	.+56     	; 0x1398 <__mulsf3_pse+0x9c>
    1360:	88 23       	and	r24, r24
    1362:	4a f0       	brmi	.+18     	; 0x1376 <__mulsf3_pse+0x7a>
    1364:	ee 0f       	add	r30, r30
    1366:	ff 1f       	adc	r31, r31
    1368:	bb 1f       	adc	r27, r27
    136a:	66 1f       	adc	r22, r22
    136c:	77 1f       	adc	r23, r23
    136e:	88 1f       	adc	r24, r24
    1370:	91 50       	subi	r25, 0x01	; 1
    1372:	50 40       	sbci	r21, 0x00	; 0
    1374:	a9 f7       	brne	.-22     	; 0x1360 <__mulsf3_pse+0x64>
    1376:	9e 3f       	cpi	r25, 0xFE	; 254
    1378:	51 05       	cpc	r21, r1
    137a:	70 f0       	brcs	.+28     	; 0x1398 <__mulsf3_pse+0x9c>
    137c:	15 cf       	rjmp	.-470    	; 0x11a8 <__fp_inf>
    137e:	5f cf       	rjmp	.-322    	; 0x123e <__fp_szero>
    1380:	5f 3f       	cpi	r21, 0xFF	; 255
    1382:	ec f3       	brlt	.-6      	; 0x137e <__mulsf3_pse+0x82>
    1384:	98 3e       	cpi	r25, 0xE8	; 232
    1386:	dc f3       	brlt	.-10     	; 0x137e <__mulsf3_pse+0x82>
    1388:	86 95       	lsr	r24
    138a:	77 95       	ror	r23
    138c:	67 95       	ror	r22
    138e:	b7 95       	ror	r27
    1390:	f7 95       	ror	r31
    1392:	e7 95       	ror	r30
    1394:	9f 5f       	subi	r25, 0xFF	; 255
    1396:	c1 f7       	brne	.-16     	; 0x1388 <__mulsf3_pse+0x8c>
    1398:	fe 2b       	or	r31, r30
    139a:	88 0f       	add	r24, r24
    139c:	91 1d       	adc	r25, r1
    139e:	96 95       	lsr	r25
    13a0:	87 95       	ror	r24
    13a2:	97 f9       	bld	r25, 7
    13a4:	08 95       	ret

000013a6 <pow>:
    13a6:	fa 01       	movw	r30, r20
    13a8:	ee 0f       	add	r30, r30
    13aa:	ff 1f       	adc	r31, r31
    13ac:	30 96       	adiw	r30, 0x00	; 0
    13ae:	21 05       	cpc	r18, r1
    13b0:	31 05       	cpc	r19, r1
    13b2:	99 f1       	breq	.+102    	; 0x141a <pow+0x74>
    13b4:	61 15       	cp	r22, r1
    13b6:	71 05       	cpc	r23, r1
    13b8:	61 f4       	brne	.+24     	; 0x13d2 <pow+0x2c>
    13ba:	80 38       	cpi	r24, 0x80	; 128
    13bc:	bf e3       	ldi	r27, 0x3F	; 63
    13be:	9b 07       	cpc	r25, r27
    13c0:	49 f1       	breq	.+82     	; 0x1414 <pow+0x6e>
    13c2:	68 94       	set
    13c4:	90 38       	cpi	r25, 0x80	; 128
    13c6:	81 05       	cpc	r24, r1
    13c8:	61 f0       	breq	.+24     	; 0x13e2 <pow+0x3c>
    13ca:	80 38       	cpi	r24, 0x80	; 128
    13cc:	bf ef       	ldi	r27, 0xFF	; 255
    13ce:	9b 07       	cpc	r25, r27
    13d0:	41 f0       	breq	.+16     	; 0x13e2 <pow+0x3c>
    13d2:	99 23       	and	r25, r25
    13d4:	42 f5       	brpl	.+80     	; 0x1426 <pow+0x80>
    13d6:	ff 3f       	cpi	r31, 0xFF	; 255
    13d8:	e1 05       	cpc	r30, r1
    13da:	31 05       	cpc	r19, r1
    13dc:	21 05       	cpc	r18, r1
    13de:	11 f1       	breq	.+68     	; 0x1424 <pow+0x7e>
    13e0:	e8 94       	clt
    13e2:	08 94       	sec
    13e4:	e7 95       	ror	r30
    13e6:	d9 01       	movw	r26, r18
    13e8:	aa 23       	and	r26, r26
    13ea:	29 f4       	brne	.+10     	; 0x13f6 <pow+0x50>
    13ec:	ab 2f       	mov	r26, r27
    13ee:	be 2f       	mov	r27, r30
    13f0:	f8 5f       	subi	r31, 0xF8	; 248
    13f2:	d0 f3       	brcs	.-12     	; 0x13e8 <pow+0x42>
    13f4:	10 c0       	rjmp	.+32     	; 0x1416 <pow+0x70>
    13f6:	ff 5f       	subi	r31, 0xFF	; 255
    13f8:	70 f4       	brcc	.+28     	; 0x1416 <pow+0x70>
    13fa:	a6 95       	lsr	r26
    13fc:	e0 f7       	brcc	.-8      	; 0x13f6 <pow+0x50>
    13fe:	f7 39       	cpi	r31, 0x97	; 151
    1400:	50 f0       	brcs	.+20     	; 0x1416 <pow+0x70>
    1402:	19 f0       	breq	.+6      	; 0x140a <pow+0x64>
    1404:	ff 3a       	cpi	r31, 0xAF	; 175
    1406:	38 f4       	brcc	.+14     	; 0x1416 <pow+0x70>
    1408:	9f 77       	andi	r25, 0x7F	; 127
    140a:	9f 93       	push	r25
    140c:	0c d0       	rcall	.+24     	; 0x1426 <pow+0x80>
    140e:	0f 90       	pop	r0
    1410:	07 fc       	sbrc	r0, 7
    1412:	90 58       	subi	r25, 0x80	; 128
    1414:	08 95       	ret
    1416:	3e f0       	brts	.+14     	; 0x1426 <pow+0x80>
    1418:	cd ce       	rjmp	.-614    	; 0x11b4 <__fp_nan>
    141a:	60 e0       	ldi	r22, 0x00	; 0
    141c:	70 e0       	ldi	r23, 0x00	; 0
    141e:	80 e8       	ldi	r24, 0x80	; 128
    1420:	9f e3       	ldi	r25, 0x3F	; 63
    1422:	08 95       	ret
    1424:	4f e7       	ldi	r20, 0x7F	; 127
    1426:	9f 77       	andi	r25, 0x7F	; 127
    1428:	5f 93       	push	r21
    142a:	4f 93       	push	r20
    142c:	3f 93       	push	r19
    142e:	2f 93       	push	r18
    1430:	17 df       	rcall	.-466    	; 0x1260 <log>
    1432:	2f 91       	pop	r18
    1434:	3f 91       	pop	r19
    1436:	4f 91       	pop	r20
    1438:	5f 91       	pop	r21
    143a:	52 df       	rcall	.-348    	; 0x12e0 <__mulsf3>
    143c:	05 c0       	rjmp	.+10     	; 0x1448 <exp>
    143e:	19 f4       	brne	.+6      	; 0x1446 <pow+0xa0>
    1440:	0e f0       	brts	.+2      	; 0x1444 <pow+0x9e>
    1442:	b2 ce       	rjmp	.-668    	; 0x11a8 <__fp_inf>
    1444:	fb ce       	rjmp	.-522    	; 0x123c <__fp_zero>
    1446:	b6 ce       	rjmp	.-660    	; 0x11b4 <__fp_nan>

00001448 <exp>:
    1448:	df de       	rcall	.-578    	; 0x1208 <__fp_splitA>
    144a:	c8 f3       	brcs	.-14     	; 0x143e <pow+0x98>
    144c:	96 38       	cpi	r25, 0x86	; 134
    144e:	c0 f7       	brcc	.-16     	; 0x1440 <pow+0x9a>
    1450:	07 f8       	bld	r0, 7
    1452:	0f 92       	push	r0
    1454:	e8 94       	clt
    1456:	2b e3       	ldi	r18, 0x3B	; 59
    1458:	3a ea       	ldi	r19, 0xAA	; 170
    145a:	48 eb       	ldi	r20, 0xB8	; 184
    145c:	5f e7       	ldi	r21, 0x7F	; 127
    145e:	4e df       	rcall	.-356    	; 0x12fc <__mulsf3_pse>
    1460:	0f 92       	push	r0
    1462:	0f 92       	push	r0
    1464:	0f 92       	push	r0
    1466:	4d b7       	in	r20, 0x3d	; 61
    1468:	5e b7       	in	r21, 0x3e	; 62
    146a:	0f 92       	push	r0
    146c:	89 d0       	rcall	.+274    	; 0x1580 <modf>
    146e:	e6 ee       	ldi	r30, 0xE6	; 230
    1470:	f0 e0       	ldi	r31, 0x00	; 0
    1472:	24 d0       	rcall	.+72     	; 0x14bc <__fp_powser>
    1474:	4f 91       	pop	r20
    1476:	5f 91       	pop	r21
    1478:	ef 91       	pop	r30
    147a:	ff 91       	pop	r31
    147c:	e5 95       	asr	r30
    147e:	ee 1f       	adc	r30, r30
    1480:	ff 1f       	adc	r31, r31
    1482:	49 f0       	breq	.+18     	; 0x1496 <exp+0x4e>
    1484:	fe 57       	subi	r31, 0x7E	; 126
    1486:	e0 68       	ori	r30, 0x80	; 128
    1488:	44 27       	eor	r20, r20
    148a:	ee 0f       	add	r30, r30
    148c:	44 1f       	adc	r20, r20
    148e:	fa 95       	dec	r31
    1490:	e1 f7       	brne	.-8      	; 0x148a <exp+0x42>
    1492:	41 95       	neg	r20
    1494:	55 0b       	sbc	r21, r21
    1496:	40 d0       	rcall	.+128    	; 0x1518 <ldexp>
    1498:	0f 90       	pop	r0
    149a:	07 fe       	sbrs	r0, 7
    149c:	34 c0       	rjmp	.+104    	; 0x1506 <inverse>
    149e:	08 95       	ret

000014a0 <__fp_mpack>:
    14a0:	9f 3f       	cpi	r25, 0xFF	; 255
    14a2:	31 f0       	breq	.+12     	; 0x14b0 <__fp_mpack_finite+0xc>

000014a4 <__fp_mpack_finite>:
    14a4:	91 50       	subi	r25, 0x01	; 1
    14a6:	20 f4       	brcc	.+8      	; 0x14b0 <__fp_mpack_finite+0xc>
    14a8:	87 95       	ror	r24
    14aa:	77 95       	ror	r23
    14ac:	67 95       	ror	r22
    14ae:	b7 95       	ror	r27
    14b0:	88 0f       	add	r24, r24
    14b2:	91 1d       	adc	r25, r1
    14b4:	96 95       	lsr	r25
    14b6:	87 95       	ror	r24
    14b8:	97 f9       	bld	r25, 7
    14ba:	08 95       	ret

000014bc <__fp_powser>:
    14bc:	df 93       	push	r29
    14be:	cf 93       	push	r28
    14c0:	1f 93       	push	r17
    14c2:	0f 93       	push	r16
    14c4:	ff 92       	push	r15
    14c6:	ef 92       	push	r14
    14c8:	df 92       	push	r13
    14ca:	7b 01       	movw	r14, r22
    14cc:	8c 01       	movw	r16, r24
    14ce:	68 94       	set
    14d0:	05 c0       	rjmp	.+10     	; 0x14dc <__fp_powser+0x20>
    14d2:	da 2e       	mov	r13, r26
    14d4:	ef 01       	movw	r28, r30
    14d6:	10 df       	rcall	.-480    	; 0x12f8 <__mulsf3x>
    14d8:	fe 01       	movw	r30, r28
    14da:	e8 94       	clt
    14dc:	a5 91       	lpm	r26, Z+
    14de:	25 91       	lpm	r18, Z+
    14e0:	35 91       	lpm	r19, Z+
    14e2:	45 91       	lpm	r20, Z+
    14e4:	55 91       	lpm	r21, Z+
    14e6:	ae f3       	brts	.-22     	; 0x14d2 <__fp_powser+0x16>
    14e8:	ef 01       	movw	r28, r30
    14ea:	35 dd       	rcall	.-1430   	; 0xf56 <__addsf3x>
    14ec:	fe 01       	movw	r30, r28
    14ee:	97 01       	movw	r18, r14
    14f0:	a8 01       	movw	r20, r16
    14f2:	da 94       	dec	r13
    14f4:	79 f7       	brne	.-34     	; 0x14d4 <__fp_powser+0x18>
    14f6:	df 90       	pop	r13
    14f8:	ef 90       	pop	r14
    14fa:	ff 90       	pop	r15
    14fc:	0f 91       	pop	r16
    14fe:	1f 91       	pop	r17
    1500:	cf 91       	pop	r28
    1502:	df 91       	pop	r29
    1504:	08 95       	ret

00001506 <inverse>:
    1506:	9b 01       	movw	r18, r22
    1508:	ac 01       	movw	r20, r24
    150a:	60 e0       	ldi	r22, 0x00	; 0
    150c:	70 e0       	ldi	r23, 0x00	; 0
    150e:	80 e8       	ldi	r24, 0x80	; 128
    1510:	9f e3       	ldi	r25, 0x3F	; 63
    1512:	74 cd       	rjmp	.-1304   	; 0xffc <__divsf3>
    1514:	49 ce       	rjmp	.-878    	; 0x11a8 <__fp_inf>
    1516:	c4 cf       	rjmp	.-120    	; 0x14a0 <__fp_mpack>

00001518 <ldexp>:
    1518:	77 de       	rcall	.-786    	; 0x1208 <__fp_splitA>
    151a:	e8 f3       	brcs	.-6      	; 0x1516 <inverse+0x10>
    151c:	99 23       	and	r25, r25
    151e:	d9 f3       	breq	.-10     	; 0x1516 <inverse+0x10>
    1520:	94 0f       	add	r25, r20
    1522:	51 1d       	adc	r21, r1
    1524:	bb f3       	brvs	.-18     	; 0x1514 <inverse+0xe>
    1526:	91 50       	subi	r25, 0x01	; 1
    1528:	50 40       	sbci	r21, 0x00	; 0
    152a:	94 f0       	brlt	.+36     	; 0x1550 <ldexp+0x38>
    152c:	59 f0       	breq	.+22     	; 0x1544 <ldexp+0x2c>
    152e:	88 23       	and	r24, r24
    1530:	32 f0       	brmi	.+12     	; 0x153e <ldexp+0x26>
    1532:	66 0f       	add	r22, r22
    1534:	77 1f       	adc	r23, r23
    1536:	88 1f       	adc	r24, r24
    1538:	91 50       	subi	r25, 0x01	; 1
    153a:	50 40       	sbci	r21, 0x00	; 0
    153c:	c1 f7       	brne	.-16     	; 0x152e <ldexp+0x16>
    153e:	9e 3f       	cpi	r25, 0xFE	; 254
    1540:	51 05       	cpc	r21, r1
    1542:	44 f7       	brge	.-48     	; 0x1514 <inverse+0xe>
    1544:	88 0f       	add	r24, r24
    1546:	91 1d       	adc	r25, r1
    1548:	96 95       	lsr	r25
    154a:	87 95       	ror	r24
    154c:	97 f9       	bld	r25, 7
    154e:	08 95       	ret
    1550:	5f 3f       	cpi	r21, 0xFF	; 255
    1552:	ac f0       	brlt	.+42     	; 0x157e <ldexp+0x66>
    1554:	98 3e       	cpi	r25, 0xE8	; 232
    1556:	9c f0       	brlt	.+38     	; 0x157e <ldexp+0x66>
    1558:	bb 27       	eor	r27, r27
    155a:	86 95       	lsr	r24
    155c:	77 95       	ror	r23
    155e:	67 95       	ror	r22
    1560:	b7 95       	ror	r27
    1562:	08 f4       	brcc	.+2      	; 0x1566 <ldexp+0x4e>
    1564:	b1 60       	ori	r27, 0x01	; 1
    1566:	93 95       	inc	r25
    1568:	c1 f7       	brne	.-16     	; 0x155a <ldexp+0x42>
    156a:	bb 0f       	add	r27, r27
    156c:	58 f7       	brcc	.-42     	; 0x1544 <ldexp+0x2c>
    156e:	11 f4       	brne	.+4      	; 0x1574 <ldexp+0x5c>
    1570:	60 ff       	sbrs	r22, 0
    1572:	e8 cf       	rjmp	.-48     	; 0x1544 <ldexp+0x2c>
    1574:	6f 5f       	subi	r22, 0xFF	; 255
    1576:	7f 4f       	sbci	r23, 0xFF	; 255
    1578:	8f 4f       	sbci	r24, 0xFF	; 255
    157a:	9f 4f       	sbci	r25, 0xFF	; 255
    157c:	e3 cf       	rjmp	.-58     	; 0x1544 <ldexp+0x2c>
    157e:	5f ce       	rjmp	.-834    	; 0x123e <__fp_szero>

00001580 <modf>:
    1580:	fa 01       	movw	r30, r20
    1582:	dc 01       	movw	r26, r24
    1584:	aa 0f       	add	r26, r26
    1586:	bb 1f       	adc	r27, r27
    1588:	9b 01       	movw	r18, r22
    158a:	ac 01       	movw	r20, r24
    158c:	bf 57       	subi	r27, 0x7F	; 127
    158e:	28 f4       	brcc	.+10     	; 0x159a <modf+0x1a>
    1590:	22 27       	eor	r18, r18
    1592:	33 27       	eor	r19, r19
    1594:	44 27       	eor	r20, r20
    1596:	50 78       	andi	r21, 0x80	; 128
    1598:	1f c0       	rjmp	.+62     	; 0x15d8 <modf+0x58>
    159a:	b7 51       	subi	r27, 0x17	; 23
    159c:	88 f4       	brcc	.+34     	; 0x15c0 <modf+0x40>
    159e:	ab 2f       	mov	r26, r27
    15a0:	00 24       	eor	r0, r0
    15a2:	46 95       	lsr	r20
    15a4:	37 95       	ror	r19
    15a6:	27 95       	ror	r18
    15a8:	01 1c       	adc	r0, r1
    15aa:	a3 95       	inc	r26
    15ac:	d2 f3       	brmi	.-12     	; 0x15a2 <modf+0x22>
    15ae:	00 20       	and	r0, r0
    15b0:	69 f0       	breq	.+26     	; 0x15cc <modf+0x4c>
    15b2:	22 0f       	add	r18, r18
    15b4:	33 1f       	adc	r19, r19
    15b6:	44 1f       	adc	r20, r20
    15b8:	b3 95       	inc	r27
    15ba:	da f3       	brmi	.-10     	; 0x15b2 <modf+0x32>
    15bc:	0d d0       	rcall	.+26     	; 0x15d8 <modf+0x58>
    15be:	b9 cc       	rjmp	.-1678   	; 0xf32 <__subsf3>
    15c0:	61 30       	cpi	r22, 0x01	; 1
    15c2:	71 05       	cpc	r23, r1
    15c4:	a0 e8       	ldi	r26, 0x80	; 128
    15c6:	8a 07       	cpc	r24, r26
    15c8:	b9 46       	sbci	r27, 0x69	; 105
    15ca:	30 f4       	brcc	.+12     	; 0x15d8 <modf+0x58>
    15cc:	9b 01       	movw	r18, r22
    15ce:	ac 01       	movw	r20, r24
    15d0:	66 27       	eor	r22, r22
    15d2:	77 27       	eor	r23, r23
    15d4:	88 27       	eor	r24, r24
    15d6:	90 78       	andi	r25, 0x80	; 128
    15d8:	30 96       	adiw	r30, 0x00	; 0
    15da:	21 f0       	breq	.+8      	; 0x15e4 <modf+0x64>
    15dc:	20 83       	st	Z, r18
    15de:	31 83       	std	Z+1, r19	; 0x01
    15e0:	42 83       	std	Z+2, r20	; 0x02
    15e2:	53 83       	std	Z+3, r21	; 0x03
    15e4:	08 95       	ret

000015e6 <__tablejump2__>:
    15e6:	ee 0f       	add	r30, r30
    15e8:	ff 1f       	adc	r31, r31
    15ea:	00 24       	eor	r0, r0
    15ec:	00 1c       	adc	r0, r0
    15ee:	0b be       	out	0x3b, r0	; 59
    15f0:	07 90       	elpm	r0, Z+
    15f2:	f6 91       	elpm	r31, Z
    15f4:	e0 2d       	mov	r30, r0
    15f6:	09 94       	ijmp

000015f8 <_exit>:
    15f8:	f8 94       	cli

000015fa <__stop_program>:
    15fa:	ff cf       	rjmp	.-2      	; 0x15fa <__stop_program>
